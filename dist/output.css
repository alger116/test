/*! tailwindcss v4.0.9 | MIT License | https://tailwindcss.com */
*, ::after, ::before, ::backdrop, ::file-selector-button {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  border: 0 solid;
}
html, :host {
  line-height: 1.5;
  -webkit-text-size-adjust: 100%;
  tab-size: 4;
  font-family: var( --default-font-family, ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji' );
  font-feature-settings: var(--default-font-feature-settings, normal);
  font-variation-settings: var(--default-font-variation-settings, normal);
  -webkit-tap-highlight-color: transparent;
}
body {
  line-height: inherit;
}
hr {
  height: 0;
  color: inherit;
  border-top-width: 1px;
}
abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
}
h1, h2, h3, h4, h5, h6 {
  font-size: inherit;
  font-weight: inherit;
}
a {
  color: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}
b, strong {
  font-weight: bolder;
}
code, kbd, samp, pre {
  font-family: var( --default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace );
  font-feature-settings: var(--default-mono-font-feature-settings, normal);
  font-variation-settings: var(--default-mono-font-variation-settings, normal);
  font-size: 1em;
}
small {
  font-size: 80%;
}
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
table {
  text-indent: 0;
  border-color: inherit;
  border-collapse: collapse;
}
:-moz-focusring {
  outline: auto;
}
progress {
  vertical-align: baseline;
}
summary {
  display: list-item;
}
ol, ul, menu {
  list-style: none;
}
img, svg, video, canvas, audio, iframe, embed, object {
  display: block;
  vertical-align: middle;
}
img, video {
  max-width: 100%;
  height: auto;
}
button, input, select, optgroup, textarea, ::file-selector-button {
  font: inherit;
  font-feature-settings: inherit;
  font-variation-settings: inherit;
  letter-spacing: inherit;
  color: inherit;
  border-radius: 0;
  background-color: transparent;
  opacity: 1;
}
:where(select:is([multiple], [size])) optgroup {
  font-weight: bolder;
}
:where(select:is([multiple], [size])) optgroup option {
  padding-inline-start: 20px;
}
::file-selector-button {
  margin-inline-end: 4px;
}
::placeholder {
  opacity: 1;
  color: color-mix(in oklab, currentColor 50%, transparent);
}
textarea {
  resize: vertical;
}
::-webkit-search-decoration {
  -webkit-appearance: none;
}
::-webkit-date-and-time-value {
  min-height: 1lh;
  text-align: inherit;
}
::-webkit-datetime-edit {
  display: inline-flex;
}
::-webkit-datetime-edit-fields-wrapper {
  padding: 0;
}
::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
  padding-block: 0;
}
:-moz-ui-invalid {
  box-shadow: none;
}
button, input:where([type='button'], [type='reset'], [type='submit']), ::file-selector-button {
  appearance: button;
}
::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
  height: auto;
}
[hidden]:where(:not([hidden='until-found'])) {
  display: none !important;
}
.\@container {
  container-type: inline-size;
}
.\@container-\[inline-size\] {
  container-type: inline-size;
}
.pointer-events-auto {
  pointer-events: auto;
}
.pointer-events-none {
  pointer-events: none;
}
.\!invisible {
  visibility: hidden !important;
}
.\!visible {
  visibility: visible !important;
}
.collapse {
  visibility: collapse;
}
.invisible {
  visibility: hidden;
}
.visible {
  visibility: visible;
}
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
.not-sr-only {
  position: static;
  width: auto;
  height: auto;
  padding: 0;
  margin: 0;
  overflow: visible;
  clip: auto;
  white-space: normal;
}
.\!absolute {
  position: absolute !important;
}
.\!relative {
  position: relative !important;
}
.absolute {
  position: absolute;
}
.fixed {
  position: fixed;
}
.fixed\! {
  position: fixed !important;
}
.relative {
  position: relative;
}
.static {
  position: static;
}
.sticky {
  position: sticky;
}
.inset-0 {
  inset: calc(var(--spacing) * 0);
}
.inset-50 {
  inset: calc(var(--spacing) * 50);
}
.inset-y-0 {
  inset-block: calc(var(--spacing) * 0);
}
.start-1 {
  inset-inline-start: calc(var(--spacing) * 1);
}
.start-2 {
  inset-inline-start: calc(var(--spacing) * 2);
}
.end-1 {
  inset-inline-end: calc(var(--spacing) * 1);
}
.end-2 {
  inset-inline-end: calc(var(--spacing) * 2);
}
.-top-2 {
  top: calc(var(--spacing) * -2);
}
.-top-24 {
  top: calc(var(--spacing) * -24);
}
.top-0 {
  top: calc(var(--spacing) * 0);
}
.top-0\.5 {
  top: calc(var(--spacing) * 0.5);
}
.top-1\/2 {
  top: calc(1/2 * 100%);
}
.top-2 {
  top: calc(var(--spacing) * 2);
}
.top-4 {
  top: calc(var(--spacing) * 4);
}
.top-5 {
  top: calc(var(--spacing) * 5);
}
.top-8 {
  top: calc(var(--spacing) * 8);
}
.top-16 {
  top: calc(var(--spacing) * 16);
}
.top-full {
  top: 100%;
}
.right-0 {
  right: calc(var(--spacing) * 0);
}
.right-2 {
  right: calc(var(--spacing) * 2);
}
.right-4 {
  right: calc(var(--spacing) * 4);
}
.right-6 {
  right: calc(var(--spacing) * 6);
}
.-bottom-32 {
  bottom: calc(var(--spacing) * -32);
}
.bottom-0 {
  bottom: calc(var(--spacing) * 0);
}
.bottom-4 {
  bottom: calc(var(--spacing) * 4);
}
.bottom-6 {
  bottom: calc(var(--spacing) * 6);
}
.bottom-full {
  bottom: 100%;
}
.-left-3 {
  left: calc(var(--spacing) * -3);
}
.-left-4 {
  left: calc(var(--spacing) * -4);
}
.-left-24 {
  left: calc(var(--spacing) * -24);
}
.left-0 {
  left: calc(var(--spacing) * 0);
}
.left-0\.5 {
  left: calc(var(--spacing) * 0.5);
}
.left-1\/2 {
  left: calc(1/2 * 100%);
}
.left-2 {
  left: calc(var(--spacing) * 2);
}
.left-3 {
  left: calc(var(--spacing) * 3);
}
.left-4 {
  left: calc(var(--spacing) * 4);
}
.left-300 {
  left: calc(var(--spacing) * 300);
}
.isolate {
  isolation: isolate;
}
.isolation-auto {
  isolation: auto;
}
.-z-10 {
  z-index: calc(10 * -1);
}
.z-10 {
  z-index: 10;
}
.z-40 {
  z-index: 40;
}
.z-50 {
  z-index: 50;
}
.z-auto {
  z-index: auto;
}
.order-first {
  order: -9999;
}
.order-last {
  order: 9999;
}
.order-none {
  order: 0;
}
.col-auto {
  grid-column: auto;
}
.col-span-1 {
  grid-column: span 1 / span 1;
}
.col-span-3 {
  grid-column: span 3 / span 3;
}
.col-span-full {
  grid-column: 1 / -1;
}
.col-start-auto {
  grid-column-start: auto;
}
.col-end-auto {
  grid-column-end: auto;
}
.row-auto {
  grid-row: auto;
}
.row-span-full {
  grid-row: 1 / -1;
}
.row-start-auto {
  grid-row-start: auto;
}
.row-end-auto {
  grid-row-end: auto;
}
.float-end {
  float: inline-end;
}
.float-left {
  float: left;
}
.float-none {
  float: none;
}
.float-right {
  float: right;
}
.float-start {
  float: inline-start;
}
.clear-both {
  clear: both;
}
.clear-end {
  clear: inline-end;
}
.clear-left {
  clear: left;
}
.clear-none {
  clear: none;
}
.clear-right {
  clear: right;
}
.clear-start {
  clear: inline-start;
}
.\!container {
  width: 100% !important;
  @media (width >= 40rem) {
    max-width: 40rem !important;
  }
  @media (width >= 48rem) {
    max-width: 48rem !important;
  }
  @media (width >= 64rem) {
    max-width: 64rem !important;
  }
  @media (width >= 80rem) {
    max-width: 80rem !important;
  }
  @media (width >= 96rem) {
    max-width: 96rem !important;
  }
}
.container {
  width: 100%;
  @media (width >= 40rem) {
    max-width: 40rem;
  }
  @media (width >= 48rem) {
    max-width: 48rem;
  }
  @media (width >= 64rem) {
    max-width: 64rem;
  }
  @media (width >= 80rem) {
    max-width: 80rem;
  }
  @media (width >= 96rem) {
    max-width: 96rem;
  }
}
.container\! {
  width: 100% !important;
  @media (width >= 40rem) {
    max-width: 40rem !important;
  }
  @media (width >= 48rem) {
    max-width: 48rem !important;
  }
  @media (width >= 64rem) {
    max-width: 64rem !important;
  }
  @media (width >= 80rem) {
    max-width: 80rem !important;
  }
  @media (width >= 96rem) {
    max-width: 96rem !important;
  }
}
.m-1 {
  margin: calc(var(--spacing) * 1);
}
.m-2 {
  margin: calc(var(--spacing) * 2);
}
.-mx-6 {
  margin-inline: calc(var(--spacing) * -6);
}
.-mx-\[-2px\] {
  margin-inline: calc(-2px * -1);
}
.-mx-\[-5px\] {
  margin-inline: calc(-5px * -1);
}
.mx-1 {
  margin-inline: calc(var(--spacing) * 1);
}
.mx-1\.5 {
  margin-inline: calc(var(--spacing) * 1.5);
}
.mx-4 {
  margin-inline: calc(var(--spacing) * 4);
}
.mx-auto {
  margin-inline: auto;
}
.my-2 {
  margin-block: calc(var(--spacing) * 2);
}
.my-5 {
  margin-block: calc(var(--spacing) * 5);
}
.my-8 {
  margin-block: calc(var(--spacing) * 8);
}
.\!ms-auto {
  margin-inline-start: auto !important;
}
.ms-0\.5 {
  margin-inline-start: calc(var(--spacing) * 0.5);
}
.ms-2 {
  margin-inline-start: calc(var(--spacing) * 2);
}
.\!me-1\.5 {
  margin-inline-end: calc(var(--spacing) * 1.5) !important;
}
.-mt-6 {
  margin-top: calc(var(--spacing) * -6);
}
.mt-0 {
  margin-top: calc(var(--spacing) * 0);
}
.mt-1 {
  margin-top: calc(var(--spacing) * 1);
}
.mt-2 {
  margin-top: calc(var(--spacing) * 2);
}
.mt-3 {
  margin-top: calc(var(--spacing) * 3);
}
.mt-4 {
  margin-top: calc(var(--spacing) * 4);
}
.mt-5 {
  margin-top: calc(var(--spacing) * 5);
}
.mt-6 {
  margin-top: calc(var(--spacing) * 6);
}
.mt-8 {
  margin-top: calc(var(--spacing) * 8);
}
.mr-1 {
  margin-right: calc(var(--spacing) * 1);
}
.mr-1\.5 {
  margin-right: calc(var(--spacing) * 1.5);
}
.mr-2 {
  margin-right: calc(var(--spacing) * 2);
}
.mr-3 {
  margin-right: calc(var(--spacing) * 3);
}
.mr-4 {
  margin-right: calc(var(--spacing) * 4);
}
.mb-0 {
  margin-bottom: calc(var(--spacing) * 0);
}
.mb-0\.5 {
  margin-bottom: calc(var(--spacing) * 0.5);
}
.mb-1 {
  margin-bottom: calc(var(--spacing) * 1);
}
.mb-2 {
  margin-bottom: calc(var(--spacing) * 2);
}
.mb-3 {
  margin-bottom: calc(var(--spacing) * 3);
}
.mb-4 {
  margin-bottom: calc(var(--spacing) * 4);
}
.mb-5 {
  margin-bottom: calc(var(--spacing) * 5);
}
.mb-6 {
  margin-bottom: calc(var(--spacing) * 6);
}
.mb-8 {
  margin-bottom: calc(var(--spacing) * 8);
}
.mb-12 {
  margin-bottom: calc(var(--spacing) * 12);
}
.ml-1 {
  margin-left: calc(var(--spacing) * 1);
}
.ml-2 {
  margin-left: calc(var(--spacing) * 2);
}
.ml-3 {
  margin-left: calc(var(--spacing) * 3);
}
.ml-4 {
  margin-left: calc(var(--spacing) * 4);
}
.ml-5 {
  margin-left: calc(var(--spacing) * 5);
}
.ml-6 {
  margin-left: calc(var(--spacing) * 6);
}
.ml-8 {
  margin-left: calc(var(--spacing) * 8);
}
.ml-auto {
  margin-left: auto;
}
.box-border {
  box-sizing: border-box;
}
.box-content {
  box-sizing: content-box;
}
.line-clamp-none {
  overflow: visible;
  display: block;
  -webkit-box-orient: horizontal;
  -webkit-line-clamp: unset;
}
.\!block {
  display: block !important;
}
.\!contents {
  display: contents !important;
}
.\!flex {
  display: flex !important;
}
.\!hidden {
  display: none !important;
}
.\!inline {
  display: inline !important;
}
.block {
  display: block;
}
.block\! {
  display: block !important;
}
.contents {
  display: contents;
}
.contents\! {
  display: contents !important;
}
.flex {
  display: flex;
}
.flow-root {
  display: flow-root;
}
.grid {
  display: grid;
}
.hidden {
  display: none;
}
.inline {
  display: inline;
}
.inline\! {
  display: inline !important;
}
.inline-block {
  display: inline-block;
}
.inline-flex {
  display: inline-flex;
}
.inline-grid {
  display: inline-grid;
}
.inline-table {
  display: inline-table;
}
.list-item {
  display: list-item;
}
.table {
  display: table;
}
.table\! {
  display: table !important;
}
.table-caption {
  display: table-caption;
}
.table-cell {
  display: table-cell;
}
.table-column {
  display: table-column;
}
.table-column-group {
  display: table-column-group;
}
.table-footer-group {
  display: table-footer-group;
}
.table-header-group {
  display: table-header-group;
}
.table-row {
  display: table-row;
}
.table-row-group {
  display: table-row-group;
}
.field-sizing-content {
  field-sizing: content;
}
.field-sizing-fixed {
  field-sizing: fixed;
}
.aspect-auto {
  aspect-ratio: auto;
}
.aspect-square {
  aspect-ratio: 1 / 1;
}
.size-3 {
  width: calc(var(--spacing) * 3);
  height: calc(var(--spacing) * 3);
}
.size-3\.5 {
  width: calc(var(--spacing) * 3.5);
  height: calc(var(--spacing) * 3.5);
}
.size-4 {
  width: calc(var(--spacing) * 4);
  height: calc(var(--spacing) * 4);
}
.size-5 {
  width: calc(var(--spacing) * 5);
  height: calc(var(--spacing) * 5);
}
.size-6 {
  width: calc(var(--spacing) * 6);
  height: calc(var(--spacing) * 6);
}
.size-8 {
  width: calc(var(--spacing) * 8);
  height: calc(var(--spacing) * 8);
}
.\!h-2\.5 {
  height: calc(var(--spacing) * 2.5) !important;
}
.\!h-64 {
  height: calc(var(--spacing) * 64) !important;
}
.h-0\.5 {
  height: calc(var(--spacing) * 0.5);
}
.h-1 {
  height: calc(var(--spacing) * 1);
}
.h-2 {
  height: calc(var(--spacing) * 2);
}
.h-2\.5 {
  height: calc(var(--spacing) * 2.5);
}
.h-3 {
  height: calc(var(--spacing) * 3);
}
.h-3\.5 {
  height: calc(var(--spacing) * 3.5);
}
.h-4 {
  height: calc(var(--spacing) * 4);
}
.h-5 {
  height: calc(var(--spacing) * 5);
}
.h-6 {
  height: calc(var(--spacing) * 6);
}
.h-8 {
  height: calc(var(--spacing) * 8);
}
.h-10 {
  height: calc(var(--spacing) * 10);
}
.h-12 {
  height: calc(var(--spacing) * 12);
}
.h-14 {
  height: calc(var(--spacing) * 14);
}
.h-16 {
  height: calc(var(--spacing) * 16);
}
.h-17 {
  height: calc(var(--spacing) * 17);
}
.h-24 {
  height: calc(var(--spacing) * 24);
}
.h-32 {
  height: calc(var(--spacing) * 32);
}
.h-48 {
  height: calc(var(--spacing) * 48);
}
.h-64 {
  height: calc(var(--spacing) * 64);
}
.h-82 {
  height: calc(var(--spacing) * 82);
}
.h-96 {
  height: calc(var(--spacing) * 96);
}
.h-full {
  height: 100%;
}
.h-screen {
  height: 100vh;
}
.max-h-60 {
  max-height: calc(var(--spacing) * 60);
}
.max-h-72 {
  max-height: calc(var(--spacing) * 72);
}
.max-h-96 {
  max-height: calc(var(--spacing) * 96);
}
.max-h-\[85vh\] {
  max-height: 85vh;
}
.max-h-\[90vh\] {
  max-height: 90vh;
}
.max-h-none {
  max-height: none;
}
.max-h-screen {
  max-height: 100vh;
}
.min-h-24 {
  min-height: calc(var(--spacing) * 24);
}
.min-h-\[70vh\] {
  min-height: 70vh;
}
.min-h-\[350px\] {
  min-height: 350px;
}
.min-h-full {
  min-height: 100%;
}
.min-h-screen {
  min-height: 100vh;
}
.\!w-2\.5 {
  width: calc(var(--spacing) * 2.5) !important;
}
.\!w-full {
  width: 100% !important;
}
.w-0\.5 {
  width: calc(var(--spacing) * 0.5);
}
.w-1 {
  width: calc(var(--spacing) * 1);
}
.w-1\/2 {
  width: calc(1/2 * 100%);
}
.w-2 {
  width: calc(var(--spacing) * 2);
}
.w-3 {
  width: calc(var(--spacing) * 3);
}
.w-3\.5 {
  width: calc(var(--spacing) * 3.5);
}
.w-3\/4 {
  width: calc(3/4 * 100%);
}
.w-4 {
  width: calc(var(--spacing) * 4);
}
.w-5 {
  width: calc(var(--spacing) * 5);
}
.w-6 {
  width: calc(var(--spacing) * 6);
}
.w-8 {
  width: calc(var(--spacing) * 8);
}
.w-10 {
  width: calc(var(--spacing) * 10);
}
.w-11 {
  width: calc(var(--spacing) * 11);
}
.w-11\/12 {
  width: calc(11/12 * 100%);
}
.w-12 {
  width: calc(var(--spacing) * 12);
}
.w-14 {
  width: calc(var(--spacing) * 14);
}
.w-16 {
  width: calc(var(--spacing) * 16);
}
.w-20 {
  width: calc(var(--spacing) * 20);
}
.w-24 {
  width: calc(var(--spacing) * 24);
}
.w-32 {
  width: calc(var(--spacing) * 32);
}
.w-40 {
  width: calc(var(--spacing) * 40);
}
.w-45 {
  width: calc(var(--spacing) * 45);
}
.w-48 {
  width: calc(var(--spacing) * 48);
}
.w-52 {
  width: calc(var(--spacing) * 52);
}
.w-56 {
  width: calc(var(--spacing) * 56);
}
.w-64 {
  width: calc(var(--spacing) * 64);
}
.w-65 {
  width: calc(var(--spacing) * 65);
}
.w-80 {
  width: calc(var(--spacing) * 80);
}
.w-90 {
  width: calc(var(--spacing) * 90);
}
.w-95 {
  width: calc(var(--spacing) * 95);
}
.w-96 {
  width: calc(var(--spacing) * 96);
}
.w-97 {
  width: calc(var(--spacing) * 97);
}
.w-100 {
  width: calc(var(--spacing) * 100);
}
.w-\[calc\(100\%-32px\)\] {
  width: calc(100% - 32px);
}
.w-auto {
  width: auto;
}
.w-full {
  width: 100%;
}
.w-screen {
  width: 100vw;
}
.max-w-2xl {
  max-width: var(--container-2xl);
}
.max-w-4xl {
  max-width: var(--container-4xl);
}
.max-w-5xl {
  max-width: var(--container-5xl);
}
.max-w-7xl {
  max-width: var(--container-7xl);
}
.max-w-75 {
  max-width: calc(var(--spacing) * 75);
}
.max-w-\[80\%\] {
  max-width: 80%;
}
.max-w-full {
  max-width: 100%;
}
.max-w-lg {
  max-width: var(--container-lg);
}
.max-w-md {
  max-width: var(--container-md);
}
.max-w-none {
  max-width: none;
}
.max-w-screen {
  max-width: 100vw;
}
.max-w-sm {
  max-width: var(--container-sm);
}
.max-w-xl {
  max-width: var(--container-xl);
}
.max-w-xs {
  max-width: var(--container-xs);
}
.min-w-24 {
  min-width: calc(var(--spacing) * 24);
}
.min-w-28 {
  min-width: calc(var(--spacing) * 28);
}
.min-w-48 {
  min-width: calc(var(--spacing) * 48);
}
.min-w-full {
  min-width: 100%;
}
.min-w-screen {
  min-width: 100vw;
}
.flex-1 {
  flex: 1;
}
.flex-auto {
  flex: auto;
}
.flex-initial {
  flex: 0 auto;
}
.flex-none {
  flex: none;
}
.flex-shrink {
  flex-shrink: 1;
}
.flex-shrink-0 {
  flex-shrink: 0;
}
.shrink {
  flex-shrink: 1;
}
.shrink-0 {
  flex-shrink: 0;
}
.flex-grow {
  flex-grow: 1;
}
.grow {
  flex-grow: 1;
}
.basis-auto {
  flex-basis: auto;
}
.basis-full {
  flex-basis: 100%;
}
.table-auto {
  table-layout: auto;
}
.table-fixed {
  table-layout: fixed;
}
.caption-bottom {
  caption-side: bottom;
}
.caption-top {
  caption-side: top;
}
.border-collapse {
  border-collapse: collapse;
}
.border-separate {
  border-collapse: separate;
}
.origin-bottom {
  transform-origin: bottom;
}
.origin-bottom-left {
  transform-origin: bottom left;
}
.origin-bottom-right {
  transform-origin: bottom right;
}
.origin-center {
  transform-origin: center;
}
.origin-left {
  transform-origin: left;
}
.origin-right {
  transform-origin: right;
}
.origin-top {
  transform-origin: top;
}
.origin-top-left {
  transform-origin: top left;
}
.origin-top-right {
  transform-origin: top right;
}
.-translate-full {
  --tw-translate-x: -100%;
  --tw-translate-y: -100%;
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.translate-full {
  --tw-translate-x: 100%;
  --tw-translate-y: 100%;
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.-translate-x-1\/2 {
  --tw-translate-x: calc(calc(1/2 * 100%) * -1);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.-translate-x-full {
  --tw-translate-x: -100%;
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.translate-x-0 {
  --tw-translate-x: calc(var(--spacing) * 0);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.-translate-y-1\/2 {
  --tw-translate-y: calc(calc(1/2 * 100%) * -1);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.translate-y-0 {
  --tw-translate-y: calc(var(--spacing) * 0);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.translate-y-2 {
  --tw-translate-y: calc(var(--spacing) * 2);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.translate-y-4 {
  --tw-translate-y: calc(var(--spacing) * 4);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.translate-y-full {
  --tw-translate-y: 100%;
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.translate-3d {
  translate: var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z);
}
.translate-none {
  translate: none;
}
.scale-95 {
  --tw-scale-x: 95%;
  --tw-scale-y: 95%;
  --tw-scale-z: 95%;
  scale: var(--tw-scale-x) var(--tw-scale-y);
}
.scale-100 {
  --tw-scale-x: 100%;
  --tw-scale-y: 100%;
  --tw-scale-z: 100%;
  scale: var(--tw-scale-x) var(--tw-scale-y);
}
.scale-3d {
  scale: var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z);
}
.scale-none {
  scale: none;
}
.rotate-180 {
  rotate: 180deg;
}
.rotate-none {
  rotate: none;
}
.transform {
  transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
}
.transform\! {
  transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y) !important;
}
.transform-cpu {
  transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
}
.transform-gpu {
  transform: translateZ(0) var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
}
.transform-none {
  transform: none;
}
.animate-bounce {
  animation: var(--animate-bounce);
}
.animate-none {
  animation: none;
}
.animate-pulse {
  animation: var(--animate-pulse);
}
.animate-spin {
  animation: var(--animate-spin);
}
.cursor-move {
  cursor: move;
}
.cursor-pointer {
  cursor: pointer;
}
.touch-pinch-zoom {
  --tw-pinch-zoom: pinch-zoom;
  touch-action: var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,);
}
.resize {
  resize: both;
}
.resize-none {
  resize: none;
}
.resize-x {
  resize: horizontal;
}
.resize-y {
  resize: vertical;
}
.snap-none {
  scroll-snap-type: none;
}
.snap-mandatory {
  --tw-scroll-snap-strictness: mandatory;
}
.snap-proximity {
  --tw-scroll-snap-strictness: proximity;
}
.snap-align-none {
  scroll-snap-align: none;
}
.snap-center {
  scroll-snap-align: center;
}
.snap-end {
  scroll-snap-align: end;
}
.snap-start {
  scroll-snap-align: start;
}
.snap-always {
  scroll-snap-stop: always;
}
.snap-normal {
  scroll-snap-stop: normal;
}
.list-inside {
  list-style-position: inside;
}
.list-outside {
  list-style-position: outside;
}
.list-decimal {
  list-style-type: decimal;
}
.list-disc {
  list-style-type: disc;
}
.list-none {
  list-style-type: none;
}
.list-image-none {
  list-style-image: none;
}
.appearance-auto {
  appearance: auto;
}
.appearance-none {
  appearance: none;
}
.columns-auto {
  columns: auto;
}
.auto-cols-auto {
  grid-auto-columns: auto;
}
.auto-cols-fr {
  grid-auto-columns: minmax(0, 1fr);
}
.auto-cols-max {
  grid-auto-columns: max-content;
}
.auto-cols-min {
  grid-auto-columns: min-content;
}
.grid-flow-col {
  grid-auto-flow: column;
}
.grid-flow-col-dense {
  grid-auto-flow: column dense;
}
.grid-flow-dense {
  grid-auto-flow: dense;
}
.grid-flow-row {
  grid-auto-flow: row;
}
.grid-flow-row-dense {
  grid-auto-flow: row dense;
}
.auto-rows-auto {
  grid-auto-rows: auto;
}
.auto-rows-fr {
  grid-auto-rows: minmax(0, 1fr);
}
.auto-rows-max {
  grid-auto-rows: max-content;
}
.auto-rows-min {
  grid-auto-rows: min-content;
}
.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}
.grid-cols-4 {
  grid-template-columns: repeat(4, minmax(0, 1fr));
}
.grid-cols-5 {
  grid-template-columns: repeat(5, minmax(0, 1fr));
}
.grid-cols-none {
  grid-template-columns: none;
}
.grid-cols-subgrid {
  grid-template-columns: subgrid;
}
.grid-rows-none {
  grid-template-rows: none;
}
.grid-rows-subgrid {
  grid-template-rows: subgrid;
}
.flex-col {
  flex-direction: column;
}
.flex-col-reverse {
  flex-direction: column-reverse;
}
.flex-row {
  flex-direction: row;
}
.flex-row-reverse {
  flex-direction: row-reverse;
}
.flex-nowrap {
  flex-wrap: nowrap;
}
.flex-wrap {
  flex-wrap: wrap;
}
.flex-wrap-reverse {
  flex-wrap: wrap-reverse;
}
.place-content-around {
  place-content: space-around;
}
.place-content-baseline {
  place-content: baseline;
}
.place-content-between {
  place-content: space-between;
}
.place-content-center {
  place-content: center;
}
.place-content-end {
  place-content: end;
}
.place-content-evenly {
  place-content: space-evenly;
}
.place-content-start {
  place-content: start;
}
.place-content-stretch {
  place-content: stretch;
}
.place-items-baseline {
  place-items: baseline;
}
.place-items-center {
  place-items: center;
}
.place-items-end {
  place-items: end;
}
.place-items-start {
  place-items: start;
}
.place-items-stretch {
  place-items: stretch;
}
.content-around {
  align-content: space-around;
}
.content-baseline {
  align-content: baseline;
}
.content-between {
  align-content: space-between;
}
.content-center {
  align-content: center;
}
.content-end {
  align-content: flex-end;
}
.content-evenly {
  align-content: space-evenly;
}
.content-normal {
  align-content: normal;
}
.content-start {
  align-content: flex-start;
}
.content-stretch {
  align-content: stretch;
}
.items-baseline {
  align-items: baseline;
}
.items-center {
  align-items: center;
}
.items-end {
  align-items: flex-end;
}
.items-start {
  align-items: flex-start;
}
.items-stretch {
  align-items: stretch;
}
.\!justify-between {
  justify-content: space-between !important;
}
.justify-around {
  justify-content: space-around;
}
.justify-baseline {
  justify-content: baseline;
}
.justify-between {
  justify-content: space-between;
}
.justify-center {
  justify-content: center;
}
.justify-end {
  justify-content: flex-end;
}
.justify-evenly {
  justify-content: space-evenly;
}
.justify-normal {
  justify-content: normal;
}
.justify-start {
  justify-content: flex-start;
}
.justify-stretch {
  justify-content: stretch;
}
.justify-items-center {
  justify-items: center;
}
.justify-items-end {
  justify-items: end;
}
.justify-items-normal {
  justify-items: normal;
}
.justify-items-start {
  justify-items: start;
}
.justify-items-stretch {
  justify-items: stretch;
}
.gap-0 {
  gap: calc(var(--spacing) * 0);
}
.gap-1 {
  gap: calc(var(--spacing) * 1);
}
.gap-2 {
  gap: calc(var(--spacing) * 2);
}
.gap-3 {
  gap: calc(var(--spacing) * 3);
}
.gap-4 {
  gap: calc(var(--spacing) * 4);
}
.gap-5 {
  gap: calc(var(--spacing) * 5);
}
.gap-6 {
  gap: calc(var(--spacing) * 6);
}
.-space-y-px {
  :where(& > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(-1px * var(--tw-space-y-reverse));
    margin-block-end: calc(-1px * calc(1 - var(--tw-space-y-reverse)));
  }
}
.space-y-0 {
  :where(& > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
  }
}
.space-y-0\.5 {
  :where(& > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 0.5) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 0.5) * calc(1 - var(--tw-space-y-reverse)));
  }
}
.space-y-1 {
  :where(& > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
  }
}
.space-y-2 {
  :where(& > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
  }
}
.space-y-3 {
  :where(& > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
  }
}
.space-y-4 {
  :where(& > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
  }
}
.space-y-5 {
  :where(& > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 5) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 5) * calc(1 - var(--tw-space-y-reverse)));
  }
}
.space-y-6 {
  :where(& > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
  }
}
.space-y-8 {
  :where(& > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
  }
}
.space-y-reverse {
  :where(& > :not(:last-child)) {
    --tw-space-y-reverse: 1;
  }
}
.gap-x-1 {
  column-gap: calc(var(--spacing) * 1);
}
.gap-x-2 {
  column-gap: calc(var(--spacing) * 2);
}
.gap-x-3 {
  column-gap: calc(var(--spacing) * 3);
}
.space-x-0 {
  :where(& > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 0) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-x-reverse)));
  }
}
.space-x-2 {
  :where(& > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
  }
}
.space-x-3 {
  :where(& > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
  }
}
.space-x-4 {
  :where(& > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
  }
}
.space-x-6 {
  :where(& > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 6) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-x-reverse)));
  }
}
.space-x-reverse {
  :where(& > :not(:last-child)) {
    --tw-space-x-reverse: 1;
  }
}
.divide-x {
  :where(& > :not(:last-child)) {
    --tw-divide-x-reverse: 0;
    border-inline-style: var(--tw-border-style);
    border-inline-start-width: calc(1px * var(--tw-divide-x-reverse));
    border-inline-end-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
  }
}
.divide-y {
  :where(& > :not(:last-child)) {
    --tw-divide-y-reverse: 0;
    border-bottom-style: var(--tw-border-style);
    border-top-style: var(--tw-border-style);
    border-top-width: calc(1px * var(--tw-divide-y-reverse));
    border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  }
}
.divide-y-reverse {
  :where(& > :not(:last-child)) {
    --tw-divide-y-reverse: 1;
  }
}
.divide-gray-100\/70 {
  :where(& > :not(:last-child)) {
    border-color: color-mix(in oklab, var(--color-gray-100) 70%, transparent);
  }
}
.divide-gray-200 {
  :where(& > :not(:last-child)) {
    border-color: var(--color-gray-200);
  }
}
.place-self-auto {
  place-self: auto;
}
.place-self-center {
  place-self: center;
}
.place-self-end {
  place-self: end;
}
.place-self-start {
  place-self: start;
}
.place-self-stretch {
  place-self: stretch;
}
.self-auto {
  align-self: auto;
}
.self-baseline {
  align-self: baseline;
}
.self-center {
  align-self: center;
}
.self-end {
  align-self: flex-end;
}
.self-start {
  align-self: flex-start;
}
.self-stretch {
  align-self: stretch;
}
.justify-self-auto {
  justify-self: auto;
}
.justify-self-center {
  justify-self: center;
}
.justify-self-end {
  justify-self: flex-end;
}
.justify-self-start {
  justify-self: flex-start;
}
.justify-self-stretch {
  justify-self: stretch;
}
.truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.overflow-auto {
  overflow: auto;
}
.overflow-hidden {
  overflow: hidden;
}
.overflow-x-auto {
  overflow-x: auto;
}
.overflow-y-auto {
  overflow-y: auto;
}
.scroll-auto {
  scroll-behavior: auto;
}
.scroll-smooth {
  scroll-behavior: smooth;
}
.\!rounded-sm {
  border-radius: var(--radius-sm) !important;
}
.rounded {
  border-radius: 0.25rem;
}
.rounded-2xl {
  border-radius: var(--radius-2xl);
}
.rounded-full {
  border-radius: calc(infinity * 1px);
}
.rounded-lg {
  border-radius: var(--radius-lg);
}
.rounded-md {
  border-radius: var(--radius-md);
}
.rounded-none {
  border-radius: 0;
}
.rounded-xl {
  border-radius: var(--radius-xl);
}
.rounded-s {
  border-start-start-radius: 0.25rem;
  border-end-start-radius: 0.25rem;
}
.rounded-ss {
  border-start-start-radius: 0.25rem;
}
.rounded-e {
  border-start-end-radius: 0.25rem;
  border-end-end-radius: 0.25rem;
}
.rounded-se {
  border-start-end-radius: 0.25rem;
}
.rounded-ee {
  border-end-end-radius: 0.25rem;
}
.rounded-es {
  border-end-start-radius: 0.25rem;
}
.rounded-t {
  border-top-left-radius: 0.25rem;
  border-top-right-radius: 0.25rem;
}
.rounded-t-lg {
  border-top-left-radius: var(--radius-lg);
  border-top-right-radius: var(--radius-lg);
}
.rounded-t-md {
  border-top-left-radius: var(--radius-md);
  border-top-right-radius: var(--radius-md);
}
.rounded-l {
  border-top-left-radius: 0.25rem;
  border-bottom-left-radius: 0.25rem;
}
.rounded-tl {
  border-top-left-radius: 0.25rem;
}
.rounded-r {
  border-top-right-radius: 0.25rem;
  border-bottom-right-radius: 0.25rem;
}
.rounded-tr {
  border-top-right-radius: 0.25rem;
}
.rounded-b {
  border-bottom-right-radius: 0.25rem;
  border-bottom-left-radius: 0.25rem;
}
.rounded-b-md {
  border-bottom-right-radius: var(--radius-md);
  border-bottom-left-radius: var(--radius-md);
}
.rounded-br {
  border-bottom-right-radius: 0.25rem;
}
.rounded-bl {
  border-bottom-left-radius: 0.25rem;
}
.border {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.border-0 {
  border-style: var(--tw-border-style);
  border-width: 0px;
}
.border-2 {
  border-style: var(--tw-border-style);
  border-width: 2px;
}
.border-3 {
  border-style: var(--tw-border-style);
  border-width: 3px;
}
.border-4 {
  border-style: var(--tw-border-style);
  border-width: 4px;
}
.border-x {
  border-inline-style: var(--tw-border-style);
  border-inline-width: 1px;
}
.border-y {
  border-block-style: var(--tw-border-style);
  border-block-width: 1px;
}
.border-s {
  border-inline-start-style: var(--tw-border-style);
  border-inline-start-width: 1px;
}
.border-e {
  border-inline-end-style: var(--tw-border-style);
  border-inline-end-width: 1px;
}
.border-t {
  border-top-style: var(--tw-border-style);
  border-top-width: 1px;
}
.border-r {
  border-right-style: var(--tw-border-style);
  border-right-width: 1px;
}
.border-b {
  border-bottom-style: var(--tw-border-style);
  border-bottom-width: 1px;
}
.border-b-2 {
  border-bottom-style: var(--tw-border-style);
  border-bottom-width: 2px;
}
.border-l {
  border-left-style: var(--tw-border-style);
  border-left-width: 1px;
}
.border-l-2 {
  border-left-style: var(--tw-border-style);
  border-left-width: 2px;
}
.border-l-4 {
  border-left-style: var(--tw-border-style);
  border-left-width: 4px;
}
.\!border-none {
  --tw-border-style: none;
  border-style: none !important;
}
.border-dashed {
  --tw-border-style: dashed;
  border-style: dashed;
}
.border-dotted {
  --tw-border-style: dotted;
  border-style: dotted;
}
.border-double {
  --tw-border-style: double;
  border-style: double;
}
.border-hidden {
  --tw-border-style: hidden;
  border-style: hidden;
}
.border-none {
  --tw-border-style: none;
  border-style: none;
}
.border-solid {
  --tw-border-style: solid;
  border-style: solid;
}
.\!border-gray-200 {
  border-color: var(--color-gray-200) !important;
}
.border-black {
  border-color: var(--color-black);
}
.border-blue-400 {
  border-color: var(--color-blue-400);
}
.border-blue-500 {
  border-color: var(--color-blue-500);
}
.border-current {
  border-color: currentColor;
}
.border-gray-100 {
  border-color: var(--color-gray-100);
}
.border-gray-200 {
  border-color: var(--color-gray-200);
}
.border-gray-300 {
  border-color: var(--color-gray-300);
}
.border-gray-400 {
  border-color: var(--color-gray-400);
}
.border-gray-600 {
  border-color: var(--color-gray-600);
}
.border-gray-700 {
  border-color: var(--color-gray-700);
}
.border-gray-700\/50 {
  border-color: color-mix(in oklab, var(--color-gray-700) 50%, transparent);
}
.border-gray-800 {
  border-color: var(--color-gray-800);
}
.border-gray-900\/25 {
  border-color: color-mix(in oklab, var(--color-gray-900) 25%, transparent);
}
.border-green-500 {
  border-color: var(--color-green-500);
}
.border-indigo-500 {
  border-color: var(--color-indigo-500);
}
.border-purple-500 {
  border-color: var(--color-purple-500);
}
.border-transparent {
  border-color: transparent;
}
.border-violet-100 {
  border-color: var(--color-violet-100);
}
.border-white {
  border-color: var(--color-white);
}
.border-white\/20 {
  border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
}
.border-t-transparent {
  border-top-color: transparent;
}
.\!bg-white {
  background-color: var(--color-white) !important;
}
.bg-\(--my_variable\) {
  background-color: var(--my_variable);
}
.bg-\(color\:--my-color\) {
  background-color: var(--my-color);
}
.bg-\[\#0088cc\] {
  background-color: #0088cc;
}
.bg-\[color\:var\(--my-color\)\] {
  background-color: var(--my-color);
}
.bg-\[var\(--my_variable\)\] {
  background-color: var(--my_variable);
}
.bg-amber-50 {
  background-color: var(--color-amber-50);
}
.bg-amber-100 {
  background-color: var(--color-amber-100);
}
.bg-amber-500 {
  background-color: var(--color-amber-500);
}
.bg-black {
  background-color: var(--color-black);
}
.bg-black\/30 {
  background-color: color-mix(in oklab, var(--color-black) 30%, transparent);
}
.bg-black\/50 {
  background-color: color-mix(in oklab, var(--color-black) 50%, transparent);
}
.bg-black\/80 {
  background-color: color-mix(in oklab, var(--color-black) 80%, transparent);
}
.bg-blue-50 {
  background-color: var(--color-blue-50);
}
.bg-blue-100 {
  background-color: var(--color-blue-100);
}
.bg-blue-500 {
  background-color: var(--color-blue-500);
}
.bg-blue-600 {
  background-color: var(--color-blue-600);
}
.bg-emerald-50 {
  background-color: var(--color-emerald-50);
}
.bg-emerald-100 {
  background-color: var(--color-emerald-100);
}
.bg-emerald-500 {
  background-color: var(--color-emerald-500);
}
.bg-gray-50 {
  background-color: var(--color-gray-50);
}
.bg-gray-50\/50 {
  background-color: color-mix(in oklab, var(--color-gray-50) 50%, transparent);
}
.bg-gray-50\/80 {
  background-color: color-mix(in oklab, var(--color-gray-50) 80%, transparent);
}
.bg-gray-100 {
  background-color: var(--color-gray-100);
}
.bg-gray-200 {
  background-color: var(--color-gray-200);
}
.bg-gray-200\/20 {
  background-color: color-mix(in oklab, var(--color-gray-200) 20%, transparent);
}
.bg-gray-300 {
  background-color: var(--color-gray-300);
}
.bg-gray-400 {
  background-color: var(--color-gray-400);
}
.bg-gray-500 {
  background-color: var(--color-gray-500);
}
.bg-gray-600 {
  background-color: var(--color-gray-600);
}
.bg-gray-700 {
  background-color: var(--color-gray-700);
}
.bg-gray-700\/50 {
  background-color: color-mix(in oklab, var(--color-gray-700) 50%, transparent);
}
.bg-gray-800 {
  background-color: var(--color-gray-800);
}
.bg-gray-800\/80 {
  background-color: color-mix(in oklab, var(--color-gray-800) 80%, transparent);
}
.bg-gray-900 {
  background-color: var(--color-gray-900);
}
.bg-gray-900\/50 {
  background-color: color-mix(in oklab, var(--color-gray-900) 50%, transparent);
}
.bg-gray-900\/90 {
  background-color: color-mix(in oklab, var(--color-gray-900) 90%, transparent);
}
.bg-green-50 {
  background-color: var(--color-green-50);
}
.bg-green-100 {
  background-color: var(--color-green-100);
}
.bg-green-500 {
  background-color: var(--color-green-500);
}
.bg-green-500\/90 {
  background-color: color-mix(in oklab, var(--color-green-500) 90%, transparent);
}
.bg-green-600 {
  background-color: var(--color-green-600);
}
.bg-indigo-50\/50 {
  background-color: color-mix(in oklab, var(--color-indigo-50) 50%, transparent);
}
.bg-indigo-100 {
  background-color: var(--color-indigo-100);
}
.bg-indigo-300 {
  background-color: var(--color-indigo-300);
}
.bg-indigo-600 {
  background-color: var(--color-indigo-600);
}
.bg-purple-50 {
  background-color: var(--color-purple-50);
}
.bg-purple-100 {
  background-color: var(--color-purple-100);
}
.bg-purple-300 {
  background-color: var(--color-purple-300);
}
.bg-purple-500 {
  background-color: var(--color-purple-500);
}
.bg-purple-600 {
  background-color: var(--color-purple-600);
}
.bg-red-100 {
  background-color: var(--color-red-100);
}
.bg-red-500 {
  background-color: var(--color-red-500);
}
.bg-red-500\/50 {
  background-color: color-mix(in oklab, var(--color-red-500) 50%, transparent);
}
.bg-red-500\/\[50\%\] {
  background-color: color-mix(in oklab, var(--color-red-500) 50%, transparent);
}
.bg-red-600 {
  background-color: var(--color-red-600);
}
.bg-sky-500 {
  background-color: var(--color-sky-500);
}
.bg-sky-500\/75 {
  background-color: color-mix(in oklab, var(--color-sky-500) 75%, transparent);
}
.bg-transparent {
  background-color: transparent;
}
.bg-violet-50 {
  background-color: var(--color-violet-50);
}
.bg-violet-100 {
  background-color: var(--color-violet-100);
}
.bg-violet-600 {
  background-color: var(--color-violet-600);
}
.bg-white {
  background-color: var(--color-white);
}
.bg-white\/10 {
  background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
}
.bg-white\/20 {
  background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
}
.bg-white\/30 {
  background-color: color-mix(in oklab, var(--color-white) 30%, transparent);
}
.bg-white\/40 {
  background-color: color-mix(in oklab, var(--color-white) 40%, transparent);
}
.bg-white\/50 {
  background-color: color-mix(in oklab, var(--color-white) 50%, transparent);
}
.bg-white\/60 {
  background-color: color-mix(in oklab, var(--color-white) 60%, transparent);
}
.bg-white\/70 {
  background-color: color-mix(in oklab, var(--color-white) 70%, transparent);
}
.bg-white\/80 {
  background-color: color-mix(in oklab, var(--color-white) 80%, transparent);
}
.bg-white\/90 {
  background-color: color-mix(in oklab, var(--color-white) 90%, transparent);
}
.bg-yellow-50 {
  background-color: var(--color-yellow-50);
}
.bg-yellow-100 {
  background-color: var(--color-yellow-100);
}
.bg-yellow-300 {
  background-color: var(--color-yellow-300);
}
.bg-yellow-500 {
  background-color: var(--color-yellow-500);
}
.bg-yellow-600 {
  background-color: var(--color-yellow-600);
}
.-bg-conic {
  --tw-gradient-position: in oklab;
  background-image: conic-gradient(var(--tw-gradient-stops));
}
.bg-conic {
  --tw-gradient-position: in oklab;
  background-image: conic-gradient(var(--tw-gradient-stops));
}
.bg-gradient-to-b {
  --tw-gradient-position: to bottom in oklab;
  background-image: linear-gradient(var(--tw-gradient-stops));
}
.bg-gradient-to-bl {
  --tw-gradient-position: to bottom left in oklab;
  background-image: linear-gradient(var(--tw-gradient-stops));
}
.bg-gradient-to-br {
  --tw-gradient-position: to bottom right in oklab;
  background-image: linear-gradient(var(--tw-gradient-stops));
}
.bg-gradient-to-r {
  --tw-gradient-position: to right in oklab;
  background-image: linear-gradient(var(--tw-gradient-stops));
}
.bg-radial {
  --tw-gradient-position: in oklab;
  background-image: radial-gradient(var(--tw-gradient-stops));
}
.bg-none {
  background-image: none;
}
.via-none {
  --tw-gradient-via-stops: initial;
}
.from-blue-100 {
  --tw-gradient-from: var(--color-blue-100);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.from-blue-300\/40 {
  --tw-gradient-from: color-mix(in oklab, var(--color-blue-300) 40%, transparent);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.from-blue-400 {
  --tw-gradient-from: var(--color-blue-400);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.from-blue-500 {
  --tw-gradient-from: var(--color-blue-500);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.from-blue-600 {
  --tw-gradient-from: var(--color-blue-600);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.from-gray-50 {
  --tw-gradient-from: var(--color-gray-50);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.from-gray-500 {
  --tw-gradient-from: var(--color-gray-500);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.from-gray-600 {
  --tw-gradient-from: var(--color-gray-600);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.from-gray-700 {
  --tw-gradient-from: var(--color-gray-700);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.from-green-500 {
  --tw-gradient-from: var(--color-green-500);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.from-green-600 {
  --tw-gradient-from: var(--color-green-600);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.from-indigo-50 {
  --tw-gradient-from: var(--color-indigo-50);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.from-indigo-100 {
  --tw-gradient-from: var(--color-indigo-100);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.from-indigo-400 {
  --tw-gradient-from: var(--color-indigo-400);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.from-indigo-500 {
  --tw-gradient-from: var(--color-indigo-500);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.from-indigo-600 {
  --tw-gradient-from: var(--color-indigo-600);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.from-red-500 {
  --tw-gradient-from: var(--color-red-500);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.from-red-600 {
  --tw-gradient-from: var(--color-red-600);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.from-violet-600 {
  --tw-gradient-from: var(--color-violet-600);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.from-white {
  --tw-gradient-from: var(--color-white);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.from-yellow-500 {
  --tw-gradient-from: var(--color-yellow-500);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-blue-50 {
  --tw-gradient-to: var(--color-blue-50);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-blue-200 {
  --tw-gradient-to: var(--color-blue-200);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-blue-400 {
  --tw-gradient-to: var(--color-blue-400);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-blue-500 {
  --tw-gradient-to: var(--color-blue-500);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-blue-500\/40 {
  --tw-gradient-to: color-mix(in oklab, var(--color-blue-500) 40%, transparent);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-blue-600 {
  --tw-gradient-to: var(--color-blue-600);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-blue-700 {
  --tw-gradient-to: var(--color-blue-700);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-cyan-400 {
  --tw-gradient-to: var(--color-cyan-400);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-cyan-500 {
  --tw-gradient-to: var(--color-cyan-500);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-cyan-600 {
  --tw-gradient-to: var(--color-cyan-600);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-emerald-400 {
  --tw-gradient-to: var(--color-emerald-400);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-emerald-500 {
  --tw-gradient-to: var(--color-emerald-500);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-gray-50 {
  --tw-gradient-to: var(--color-gray-50);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-green-600 {
  --tw-gradient-to: var(--color-green-600);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-indigo-50 {
  --tw-gradient-to: var(--color-indigo-50);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-indigo-600 {
  --tw-gradient-to: var(--color-indigo-600);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-orange-400 {
  --tw-gradient-to: var(--color-orange-400);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-orange-500 {
  --tw-gradient-to: var(--color-orange-500);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-purple-50 {
  --tw-gradient-to: var(--color-purple-50);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-purple-400 {
  --tw-gradient-to: var(--color-purple-400);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-purple-500 {
  --tw-gradient-to: var(--color-purple-500);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-purple-600 {
  --tw-gradient-to: var(--color-purple-600);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-red-600 {
  --tw-gradient-to: var(--color-red-600);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-white {
  --tw-gradient-to: var(--color-white);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-yellow-600 {
  --tw-gradient-to: var(--color-yellow-600);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.box-decoration-clone {
  -webkit-box-decoration-break: clone;
  box-decoration-break: clone;
}
.box-decoration-slice {
  -webkit-box-decoration-break: slice;
  box-decoration-break: slice;
}
.decoration-clone {
  -webkit-box-decoration-break: clone;
  box-decoration-break: clone;
}
.decoration-slice {
  -webkit-box-decoration-break: slice;
  box-decoration-break: slice;
}
.bg-auto {
  background-size: auto;
}
.bg-contain {
  background-size: contain;
}
.bg-cover {
  background-size: cover;
}
.bg-fixed {
  background-attachment: fixed;
}
.bg-local {
  background-attachment: local;
}
.bg-scroll {
  background-attachment: scroll;
}
.bg-clip-border {
  background-clip: border-box;
}
.bg-clip-content {
  background-clip: content-box;
}
.bg-clip-padding {
  background-clip: padding-box;
}
.bg-clip-text {
  background-clip: text;
}
.bg-bottom {
  background-position: bottom;
}
.bg-center {
  background-position: center;
}
.bg-left {
  background-position: left;
}
.bg-left-bottom {
  background-position: left bottom;
}
.bg-left-top {
  background-position: left top;
}
.bg-right {
  background-position: right;
}
.bg-right-bottom {
  background-position: right bottom;
}
.bg-right-top {
  background-position: right top;
}
.bg-top {
  background-position: top;
}
.bg-no-repeat {
  background-repeat: no-repeat;
}
.bg-repeat {
  background-repeat: repeat;
}
.bg-repeat-round {
  background-repeat: round;
}
.bg-repeat-space {
  background-repeat: space;
}
.bg-repeat-x {
  background-repeat: repeat-x;
}
.bg-repeat-y {
  background-repeat: repeat-y;
}
.bg-origin-border {
  background-origin: border-box;
}
.bg-origin-content {
  background-origin: content-box;
}
.bg-origin-padding {
  background-origin: padding-box;
}
.fill-black {
  fill: var(--color-black);
}
.fill-none {
  fill: none;
}
.stroke-current {
  stroke: currentColor;
}
.stroke-none {
  stroke: none;
}
.object-contain {
  object-fit: contain;
}
.object-cover {
  object-fit: cover;
}
.object-fill {
  object-fit: fill;
}
.object-none {
  object-fit: none;
}
.object-scale-down {
  object-fit: scale-down;
}
.object-bottom {
  object-position: bottom;
}
.object-center {
  object-position: center;
}
.object-left {
  object-position: left;
}
.object-left-bottom {
  object-position: left bottom;
}
.object-left-top {
  object-position: left top;
}
.object-right {
  object-position: right;
}
.object-right-bottom {
  object-position: right bottom;
}
.object-right-top {
  object-position: right top;
}
.object-top {
  object-position: top;
}
.p-0 {
  padding: calc(var(--spacing) * 0);
}
.p-0\.5 {
  padding: calc(var(--spacing) * 0.5);
}
.p-1 {
  padding: calc(var(--spacing) * 1);
}
.p-2 {
  padding: calc(var(--spacing) * 2);
}
.p-3 {
  padding: calc(var(--spacing) * 3);
}
.p-4 {
  padding: calc(var(--spacing) * 4);
}
.p-5 {
  padding: calc(var(--spacing) * 5);
}
.p-6 {
  padding: calc(var(--spacing) * 6);
}
.p-8 {
  padding: calc(var(--spacing) * 8);
}
.\!px-2\.5 {
  padding-inline: calc(var(--spacing) * 2.5) !important;
}
.px-0\.5 {
  padding-inline: calc(var(--spacing) * 0.5);
}
.px-1 {
  padding-inline: calc(var(--spacing) * 1);
}
.px-2 {
  padding-inline: calc(var(--spacing) * 2);
}
.px-3 {
  padding-inline: calc(var(--spacing) * 3);
}
.px-4 {
  padding-inline: calc(var(--spacing) * 4);
}
.px-5 {
  padding-inline: calc(var(--spacing) * 5);
}
.px-6 {
  padding-inline: calc(var(--spacing) * 6);
}
.px-8 {
  padding-inline: calc(var(--spacing) * 8);
}
.\!py-0\.5 {
  padding-block: calc(var(--spacing) * 0.5) !important;
}
.py-1 {
  padding-block: calc(var(--spacing) * 1);
}
.py-1\.5 {
  padding-block: calc(var(--spacing) * 1.5);
}
.py-2 {
  padding-block: calc(var(--spacing) * 2);
}
.py-2\.5 {
  padding-block: calc(var(--spacing) * 2.5);
}
.py-3 {
  padding-block: calc(var(--spacing) * 3);
}
.py-3\.5 {
  padding-block: calc(var(--spacing) * 3.5);
}
.py-4 {
  padding-block: calc(var(--spacing) * 4);
}
.py-6 {
  padding-block: calc(var(--spacing) * 6);
}
.py-8 {
  padding-block: calc(var(--spacing) * 8);
}
.py-10 {
  padding-block: calc(var(--spacing) * 10);
}
.py-12 {
  padding-block: calc(var(--spacing) * 12);
}
.pe-6 {
  padding-inline-end: calc(var(--spacing) * 6);
}
.pt-1 {
  padding-top: calc(var(--spacing) * 1);
}
.pt-2 {
  padding-top: calc(var(--spacing) * 2);
}
.pt-3 {
  padding-top: calc(var(--spacing) * 3);
}
.pt-4 {
  padding-top: calc(var(--spacing) * 4);
}
.pt-5 {
  padding-top: calc(var(--spacing) * 5);
}
.pt-6 {
  padding-top: calc(var(--spacing) * 6);
}
.pt-32 {
  padding-top: calc(var(--spacing) * 32);
}
.pr-2 {
  padding-right: calc(var(--spacing) * 2);
}
.pr-4 {
  padding-right: calc(var(--spacing) * 4);
}
.pr-10 {
  padding-right: calc(var(--spacing) * 10);
}
.pb-2 {
  padding-bottom: calc(var(--spacing) * 2);
}
.pb-3 {
  padding-bottom: calc(var(--spacing) * 3);
}
.pb-4 {
  padding-bottom: calc(var(--spacing) * 4);
}
.pb-6 {
  padding-bottom: calc(var(--spacing) * 6);
}
.pb-20 {
  padding-bottom: calc(var(--spacing) * 20);
}
.pl-0\.5 {
  padding-left: calc(var(--spacing) * 0.5);
}
.pl-3 {
  padding-left: calc(var(--spacing) * 3);
}
.pl-4 {
  padding-left: calc(var(--spacing) * 4);
}
.pl-8 {
  padding-left: calc(var(--spacing) * 8);
}
.pl-12 {
  padding-left: calc(var(--spacing) * 12);
}
.pl-64 {
  padding-left: calc(var(--spacing) * 64);
}
.text-center {
  text-align: center;
}
.text-end {
  text-align: end;
}
.text-justify {
  text-align: justify;
}
.text-left {
  text-align: left;
}
.text-right {
  text-align: right;
}
.text-start {
  text-align: start;
}
.indent-1 {
  text-indent: calc(var(--spacing) * 1);
}
.align-baseline {
  vertical-align: baseline;
}
.align-bottom {
  vertical-align: bottom;
}
.align-middle {
  vertical-align: middle;
}
.align-sub {
  vertical-align: sub;
}
.align-super {
  vertical-align: super;
}
.align-text-bottom {
  vertical-align: text-bottom;
}
.align-text-top {
  vertical-align: text-top;
}
.align-top {
  vertical-align: top;
}
.font-sans {
  font-family: var(--font-sans);
}
.\!text-sm {
  font-size: var(--text-sm) !important;
  line-height: var(--tw-leading, var(--text-sm--line-height)) !important;
}
.text-2xl {
  font-size: var(--text-2xl);
  line-height: var(--tw-leading, var(--text-2xl--line-height));
}
.text-3xl {
  font-size: var(--text-3xl);
  line-height: var(--tw-leading, var(--text-3xl--line-height));
}
.text-4xl {
  font-size: var(--text-4xl);
  line-height: var(--tw-leading, var(--text-4xl--line-height));
}
.text-base {
  font-size: var(--text-base);
  line-height: var(--tw-leading, var(--text-base--line-height));
}
.text-lg {
  font-size: var(--text-lg);
  line-height: var(--tw-leading, var(--text-lg--line-height));
}
.text-sm {
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
}
.text-xl {
  font-size: var(--text-xl);
  line-height: var(--tw-leading, var(--text-xl--line-height));
}
.text-xs {
  font-size: var(--text-xs);
  line-height: var(--tw-leading, var(--text-xs--line-height));
}
.leading-5 {
  --tw-leading: calc(var(--spacing) * 5);
  line-height: calc(var(--spacing) * 5);
}
.leading-6 {
  --tw-leading: calc(var(--spacing) * 6);
  line-height: calc(var(--spacing) * 6);
}
.leading-none {
  --tw-leading: 1;
  line-height: 1;
}
.leading-relaxed {
  --tw-leading: var(--leading-relaxed);
  line-height: var(--leading-relaxed);
}
.\!font-medium {
  --tw-font-weight: var(--font-weight-medium);
  font-weight: var(--font-weight-medium) !important;
}
.\!font-semibold {
  --tw-font-weight: var(--font-weight-semibold);
  font-weight: var(--font-weight-semibold) !important;
}
.font-bold {
  --tw-font-weight: var(--font-weight-bold);
  font-weight: var(--font-weight-bold);
}
.font-extrabold {
  --tw-font-weight: var(--font-weight-extrabold);
  font-weight: var(--font-weight-extrabold);
}
.font-medium {
  --tw-font-weight: var(--font-weight-medium);
  font-weight: var(--font-weight-medium);
}
.font-normal {
  --tw-font-weight: var(--font-weight-normal);
  font-weight: var(--font-weight-normal);
}
.font-semibold {
  --tw-font-weight: var(--font-weight-semibold);
  font-weight: var(--font-weight-semibold);
}
.tracking-tight {
  --tw-tracking: var(--tracking-tight);
  letter-spacing: var(--tracking-tight);
}
.tracking-wider {
  --tw-tracking: var(--tracking-wider);
  letter-spacing: var(--tracking-wider);
}
.text-balance {
  text-wrap: balance;
}
.text-nowrap {
  text-wrap: nowrap;
}
.text-pretty {
  text-wrap: pretty;
}
.text-wrap {
  text-wrap: wrap;
}
.break-normal {
  overflow-wrap: normal;
  word-break: normal;
}
.break-words {
  overflow-wrap: break-word;
}
.break-all {
  word-break: break-all;
}
.break-keep {
  word-break: keep-all;
}
.overflow-ellipsis {
  text-overflow: ellipsis;
}
.text-clip {
  text-overflow: clip;
}
.text-ellipsis {
  text-overflow: ellipsis;
}
.hyphens-auto {
  -webkit-hyphens: auto;
  hyphens: auto;
}
.hyphens-manual {
  -webkit-hyphens: manual;
  hyphens: manual;
}
.hyphens-none {
  -webkit-hyphens: none;
  hyphens: none;
}
.whitespace-break-spaces {
  white-space: break-spaces;
}
.whitespace-normal {
  white-space: normal;
}
.whitespace-nowrap {
  white-space: nowrap;
}
.whitespace-pre {
  white-space: pre;
}
.whitespace-pre-line {
  white-space: pre-line;
}
.whitespace-pre-wrap {
  white-space: pre-wrap;
}
.\[color\:red\] {
  color: red;
}
.\[color\:red\]\/50 {
  color: color-mix(in oklab, red 50%, transparent);
}
.\[color\:red\]\/50\! {
  color: color-mix(in oklab, red 50%, transparent) !important;
}
.text-amber-500 {
  color: var(--color-amber-500);
}
.text-amber-600 {
  color: var(--color-amber-600);
}
.text-black {
  color: var(--color-black);
}
.text-blue-400 {
  color: var(--color-blue-400);
}
.text-blue-500 {
  color: var(--color-blue-500);
}
.text-blue-600 {
  color: var(--color-blue-600);
}
.text-blue-700 {
  color: var(--color-blue-700);
}
.text-blue-800 {
  color: var(--color-blue-800);
}
.text-emerald-500 {
  color: var(--color-emerald-500);
}
.text-emerald-600 {
  color: var(--color-emerald-600);
}
.text-gray-200 {
  color: var(--color-gray-200);
}
.text-gray-300 {
  color: var(--color-gray-300);
}
.text-gray-400 {
  color: var(--color-gray-400);
}
.text-gray-500 {
  color: var(--color-gray-500);
}
.text-gray-600 {
  color: var(--color-gray-600);
}
.text-gray-700 {
  color: var(--color-gray-700);
}
.text-gray-800 {
  color: var(--color-gray-800);
}
.text-gray-900 {
  color: var(--color-gray-900);
}
.text-green-500 {
  color: var(--color-green-500);
}
.text-green-600 {
  color: var(--color-green-600);
}
.text-green-800 {
  color: var(--color-green-800);
}
.text-indigo-500 {
  color: var(--color-indigo-500);
}
.text-indigo-600 {
  color: var(--color-indigo-600);
}
.text-indigo-700 {
  color: var(--color-indigo-700);
}
.text-pink-500 {
  color: var(--color-pink-500);
}
.text-purple-500 {
  color: var(--color-purple-500);
}
.text-purple-600 {
  color: var(--color-purple-600);
}
.text-purple-800 {
  color: var(--color-purple-800);
}
.text-red-400 {
  color: var(--color-red-400);
}
.text-red-500 {
  color: var(--color-red-500);
}
.text-red-600 {
  color: var(--color-red-600);
}
.text-transparent {
  color: transparent;
}
.text-violet-100 {
  color: var(--color-violet-100);
}
.text-violet-500 {
  color: var(--color-violet-500);
}
.text-violet-600 {
  color: var(--color-violet-600);
}
.text-white {
  color: var(--color-white);
}
.text-yellow-800 {
  color: var(--color-yellow-800);
}
.capitalize {
  text-transform: capitalize;
}
.capitalize\! {
  text-transform: capitalize !important;
}
.lowercase {
  text-transform: lowercase;
}
.normal-case {
  text-transform: none;
}
.uppercase {
  text-transform: uppercase;
}
.italic {
  font-style: italic;
}
.not-italic {
  font-style: normal;
}
.font-stretch-condensed {
  font-stretch: condensed;
}
.font-stretch-expanded {
  font-stretch: expanded;
}
.font-stretch-extra-condensed {
  font-stretch: extra-condensed;
}
.font-stretch-extra-expanded {
  font-stretch: extra-expanded;
}
.font-stretch-normal {
  font-stretch: normal;
}
.font-stretch-semi-condensed {
  font-stretch: semi-condensed;
}
.font-stretch-semi-expanded {
  font-stretch: semi-expanded;
}
.font-stretch-ultra-condensed {
  font-stretch: ultra-condensed;
}
.font-stretch-ultra-expanded {
  font-stretch: ultra-expanded;
}
.diagonal-fractions {
  --tw-numeric-fraction: diagonal-fractions;
  font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
}
.lining-nums {
  --tw-numeric-figure: lining-nums;
  font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
}
.oldstyle-nums {
  --tw-numeric-figure: oldstyle-nums;
  font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
}
.ordinal {
  --tw-ordinal: ordinal;
  font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
}
.proportional-nums {
  --tw-numeric-spacing: proportional-nums;
  font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
}
.slashed-zero {
  --tw-slashed-zero: slashed-zero;
  font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
}
.stacked-fractions {
  --tw-numeric-fraction: stacked-fractions;
  font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
}
.tabular-nums {
  --tw-numeric-spacing: tabular-nums;
  font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
}
.normal-nums {
  font-variant-numeric: normal;
}
.line-through {
  text-decoration-line: line-through;
}
.no-underline {
  text-decoration-line: none;
}
.overline {
  text-decoration-line: overline;
}
.underline {
  text-decoration-line: underline;
}
.decoration-dashed {
  text-decoration-style: dashed;
}
.decoration-dotted {
  text-decoration-style: dotted;
}
.decoration-double {
  text-decoration-style: double;
}
.decoration-solid {
  text-decoration-style: solid;
}
.decoration-wavy {
  text-decoration-style: wavy;
}
.decoration-auto {
  text-decoration-thickness: auto;
}
.decoration-from-font {
  text-decoration-thickness: from-font;
}
.underline-offset-auto {
  text-underline-offset: auto;
}
.antialiased {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.subpixel-antialiased {
  -webkit-font-smoothing: auto;
  -moz-osx-font-smoothing: auto;
}
.placeholder-gray-400 {
  &::placeholder {
    color: var(--color-gray-400);
  }
}
.placeholder-gray-500 {
  &::placeholder {
    color: var(--color-gray-500);
  }
}
.accent-auto {
  accent-color: auto;
}
.scheme-dark {
  color-scheme: dark;
}
.scheme-light {
  color-scheme: light;
}
.scheme-light-dark {
  color-scheme: light dark;
}
.scheme-normal {
  color-scheme: normal;
}
.scheme-only-dark {
  color-scheme: only dark;
}
.scheme-only-light {
  color-scheme: only light;
}
.opacity-0 {
  opacity: 0%;
}
.opacity-0\.5 {
  opacity: 0.5%;
}
.opacity-20 {
  opacity: 20%;
}
.opacity-90 {
  opacity: 90%;
}
.opacity-100 {
  opacity: 100%;
}
.mix-blend-plus-darker {
  mix-blend-mode: plus-darker;
}
.mix-blend-plus-lighter {
  mix-blend-mode: plus-lighter;
}
.shadow {
  --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.shadow-2xl {
  --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, rgb(0 0 0 / 0.25));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.shadow-lg {
  --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.shadow-md {
  --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.shadow-sm {
  --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.shadow-xl {
  --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.ring {
  --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.ring-1 {
  --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.ring-2 {
  --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.ring-4 {
  --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.inset-ring {
  --tw-inset-ring-shadow: inset 0 0 0 1px var(--tw-inset-ring-color, currentColor);
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.shadow-initial {
  --tw-shadow-color: initial;
}
.ring-black {
  --tw-ring-color: var(--color-black);
}
.ring-gray-300 {
  --tw-ring-color: var(--color-gray-300);
}
.ring-green-600\/20 {
  --tw-ring-color: color-mix(in oklab, var(--color-green-600) 20%, transparent);
}
.ring-indigo-500 {
  --tw-ring-color: var(--color-indigo-500);
}
.ring-purple-600\/20 {
  --tw-ring-color: color-mix(in oklab, var(--color-purple-600) 20%, transparent);
}
.ring-white {
  --tw-ring-color: var(--color-white);
}
.ring-yellow-600\/20 {
  --tw-ring-color: color-mix(in oklab, var(--color-yellow-600) 20%, transparent);
}
.inset-shadow-initial {
  --tw-inset-shadow-color: initial;
}
.outline-hidden {
  outline-style: none;
  @media (forced-colors: active) {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}
.outline {
  outline-style: var(--tw-outline-style);
  outline-width: 1px;
}
.blur {
  --tw-blur: blur(8px);
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
.blur-3xl {
  --tw-blur: blur(var(--blur-3xl));
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
.blur-none {
  --tw-blur:  ;
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
.drop-shadow {
  --tw-drop-shadow: drop-shadow(0 1px 2px rgb(0 0 0 / 0.1)) drop-shadow( 0 1px 1px rgb(0 0 0 / 0.06));
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
.drop-shadow-lg {
  --tw-drop-shadow: drop-shadow(var(--drop-shadow-lg));
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
.drop-shadow-none {
  --tw-drop-shadow:  ;
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
.grayscale {
  --tw-grayscale: grayscale(100%);
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
.invert {
  --tw-invert: invert(100%);
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
.sepia {
  --tw-sepia: sepia(100%);
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
.\!filter {
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,) !important;
}
.filter {
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
.filter\! {
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,) !important;
}
.backdrop-blur {
  --tw-backdrop-blur: blur(8px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
}
.backdrop-blur-2xl {
  --tw-backdrop-blur: blur(var(--blur-2xl));
  -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
}
.backdrop-blur-md {
  --tw-backdrop-blur: blur(var(--blur-md));
  -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
}
.backdrop-blur-none {
  --tw-backdrop-blur:  ;
  -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
}
.backdrop-blur-sm {
  --tw-backdrop-blur: blur(var(--blur-sm));
  -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
}
.backdrop-grayscale {
  --tw-backdrop-grayscale: grayscale(100%);
  -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
}
.backdrop-invert {
  --tw-backdrop-invert: invert(100%);
  -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
}
.backdrop-sepia {
  --tw-backdrop-sepia: sepia(100%);
  -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
}
.backdrop-filter {
  -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
}
.transition {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.transition\! {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter !important;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function)) !important;
  transition-duration: var(--tw-duration, var(--default-transition-duration)) !important;
}
.transition-all {
  transition-property: all;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.transition-colors {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.transition-opacity {
  transition-property: opacity;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.transition-shadow {
  transition-property: box-shadow;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.transition-transform {
  transition-property: transform, translate, scale, rotate;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.transition-none {
  transition-property: none;
}
.transition-discrete {
  transition-behavior: allow-discrete;
}
.transition-normal {
  transition-behavior: normal;
}
.delay-150 {
  transition-delay: 150ms;
}
.delay-300 {
  transition-delay: 300ms;
}
.delay-700 {
  transition-delay: 700ms;
}
.duration-150 {
  --tw-duration: 150ms;
  transition-duration: 150ms;
}
.duration-200 {
  --tw-duration: 200ms;
  transition-duration: 200ms;
}
.duration-300 {
  --tw-duration: 300ms;
  transition-duration: 300ms;
}
.duration-500 {
  --tw-duration: 500ms;
  transition-duration: 500ms;
}
.duration-700 {
  --tw-duration: 700ms;
  transition-duration: 700ms;
}
.ease-in {
  --tw-ease: var(--ease-in);
  transition-timing-function: var(--ease-in);
}
.ease-in-out {
  --tw-ease: var(--ease-in-out);
  transition-timing-function: var(--ease-in-out);
}
.ease-linear {
  --tw-ease: linear;
  transition-timing-function: linear;
}
.ease-out {
  --tw-ease: var(--ease-out);
  transition-timing-function: var(--ease-out);
}
.will-change-auto {
  will-change: auto;
}
.will-change-contents {
  will-change: contents;
}
.will-change-scroll {
  will-change: scroll-position;
}
.will-change-transform {
  will-change: transform;
}
.contain-inline-size {
  --tw-contain-size: inline-size;
  contain: var(--tw-contain-size,) var(--tw-contain-layout,) var(--tw-contain-paint,) var(--tw-contain-style,);
}
.contain-layout {
  --tw-contain-layout: layout;
  contain: var(--tw-contain-size,) var(--tw-contain-layout,) var(--tw-contain-paint,) var(--tw-contain-style,);
}
.contain-paint {
  --tw-contain-paint: paint;
  contain: var(--tw-contain-size,) var(--tw-contain-layout,) var(--tw-contain-paint,) var(--tw-contain-style,);
}
.contain-size {
  --tw-contain-size: size;
  contain: var(--tw-contain-size,) var(--tw-contain-layout,) var(--tw-contain-paint,) var(--tw-contain-style,);
}
.contain-style {
  --tw-contain-style: style;
  contain: var(--tw-contain-size,) var(--tw-contain-layout,) var(--tw-contain-paint,) var(--tw-contain-style,);
}
.contain-content {
  contain: content;
}
.contain-none {
  contain: none;
}
.contain-strict {
  contain: strict;
}
.content-none {
  --tw-content: none;
  content: none;
}
.forced-color-adjust-auto {
  forced-color-adjust: auto;
}
.forced-color-adjust-none {
  forced-color-adjust: none;
}
.outline-dashed {
  --tw-outline-style: dashed;
  outline-style: dashed;
}
.outline-dotted {
  --tw-outline-style: dotted;
  outline-style: dotted;
}
.outline-double {
  --tw-outline-style: double;
  outline-style: double;
}
.outline-none {
  --tw-outline-style: none;
  outline-style: none;
}
.outline-solid {
  --tw-outline-style: solid;
  outline-style: solid;
}
.\[host\:\]port\] {
  host: ]port;
}
.\[isorelax\:isorelax\] {
  isorelax: isorelax;
}
.\[k\:K\] {
  k: K;
}
.\[keywords\:node-addon-api\] {
  keywords: node-addon-api;
}
.\[link\:classes\/Rails\/Application\.html\#method-i-message_verifier\] {
  link: classes/Rails/Application.html#method-i-message verifier;
}
.\[mailto\:james\@grayproductions\.net\] {
  mailto: james@grayproductions.net;
}
.\[options\:IParseOptions\] {
  options: IParseOptions;
}
.\[rdoc-ref\:ARGF\] {
  rdoc-ref: ARGF;
}
.\[rdoc-ref\:BigDecimal\@Not\+a\+Number\] {
  rdoc-ref: BigDecimal@Not+a+Number;
}
.\[rdoc-ref\:Enumerable\] {
  rdoc-ref: Enumerable;
}
.\[rdoc-ref\:Logger\@Entries\] {
  rdoc-ref: Logger@Entries;
}
.\[rdoc-ref\:Logger\@Log\+Level\] {
  rdoc-ref: Logger@Log+Level;
}
.\[rdoc-ref\:Logger\@Periodic\+Rotation\] {
  rdoc-ref: Logger@Periodic+Rotation;
}
.\[rdoc-ref\:Logger\@Program\+Name\] {
  rdoc-ref: Logger@Program+Name;
}
.\[rdoc-ref\:Runnable\#result_code\] {
  rdoc-ref: Runnable#result code;
}
.\[rdoc-ref\:dig_methods\.rdoc\] {
  rdoc-ref: dig methods.rdoc;
}
.\[rdoc-ref\:lib\/racc\/rdoc\/grammar\.en\.rdoc\] {
  rdoc-ref: lib/racc/rdoc/grammar.en.rdoc;
}
.\[root\:Root\] {
  root: Root;
}
.\[ruby-core\:63582\] {
  ruby-core: 63582;
}
.\[ruby-core\:105587\] {
  ruby-core: 105587;
}
.\[ruby-dev\:50626\] {
  ruby-dev: 50626;
}
.\[ruby-list\:50731\] {
  ruby-list: 50731;
}
.\[xerces\:xercesImpl\] {
  xerces: xercesImpl;
}
.\[xml-apis\:xml-apis\] {
  xml-apis: xml-apis;
}
.backface-hidden {
  backface-visibility: hidden;
}
.backface-visible {
  backface-visibility: visible;
}
.divide-x-reverse {
  :where(& > :not(:last-child)) {
    --tw-divide-x-reverse: 1;
  }
}
.duration-initial {
  --tw-duration: initial;
}
.ease-initial {
  --tw-ease: initial;
}
.perspective-none {
  perspective: none;
}
.perspective-origin-bottom {
  perspective-origin: bottom;
}
.perspective-origin-bottom-left {
  perspective-origin: bottom left;
}
.perspective-origin-bottom-right {
  perspective-origin: bottom right;
}
.perspective-origin-center {
  perspective-origin: center;
}
.perspective-origin-left {
  perspective-origin: left;
}
.perspective-origin-right {
  perspective-origin: right;
}
.perspective-origin-top {
  perspective-origin: top;
}
.perspective-origin-top-left {
  perspective-origin: top left;
}
.perspective-origin-top-right {
  perspective-origin: top right;
}
.ring-inset {
  --tw-ring-inset: inset;
}
.transform-3d {
  transform-style: preserve-3d;
}
.transform-border {
  transform-box: border-box;
}
.transform-content {
  transform-box: content-box;
}
.transform-fill {
  transform-box: fill-box;
}
.transform-flat {
  transform-style: flat;
}
.transform-stroke {
  transform-box: stroke-box;
}
.transform-view {
  transform-box: view-box;
}
.group-hover\:text-blue-400 {
  &:is(:where(.group):hover *) {
    @media (hover: hover) {
      color: var(--color-blue-400);
    }
  }
}
.group-hover\:text-indigo-400 {
  &:is(:where(.group):hover *) {
    @media (hover: hover) {
      color: var(--color-indigo-400);
    }
  }
}
.peer-checked\:translate-x-full {
  &:is(:where(.peer):checked ~ *) {
    --tw-translate-x: 100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
}
.peer-checked\:bg-blue-500 {
  &:is(:where(.peer):checked ~ *) {
    background-color: var(--color-blue-500);
  }
}
.peer-checked\:bg-blue-600 {
  &:is(:where(.peer):checked ~ *) {
    background-color: var(--color-blue-600);
  }
}
.peer-focus\:ring-4 {
  &:is(:where(.peer):focus ~ *) {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.peer-focus\:ring-blue-300 {
  &:is(:where(.peer):focus ~ *) {
    --tw-ring-color: var(--color-blue-300);
  }
}
.peer-focus\:outline-none {
  &:is(:where(.peer):focus ~ *) {
    --tw-outline-style: none;
    outline-style: none;
  }
}
.placeholder\:text-gray-400 {
  &::placeholder {
    color: var(--color-gray-400);
  }
}
.before\:absolute {
  &::before {
    content: var(--tw-content);
    position: absolute;
  }
}
.before\:inset-0 {
  &::before {
    content: var(--tw-content);
    inset: calc(var(--spacing) * 0);
  }
}
.before\:z-1 {
  &::before {
    content: var(--tw-content);
    z-index: 1;
  }
}
.after\:absolute {
  &::after {
    content: var(--tw-content);
    position: absolute;
  }
}
.after\:top-\[2px\] {
  &::after {
    content: var(--tw-content);
    top: 2px;
  }
}
.after\:left-\[2px\] {
  &::after {
    content: var(--tw-content);
    left: 2px;
  }
}
.after\:h-5 {
  &::after {
    content: var(--tw-content);
    height: calc(var(--spacing) * 5);
  }
}
.after\:w-5 {
  &::after {
    content: var(--tw-content);
    width: calc(var(--spacing) * 5);
  }
}
.after\:rounded-full {
  &::after {
    content: var(--tw-content);
    border-radius: calc(infinity * 1px);
  }
}
.after\:border {
  &::after {
    content: var(--tw-content);
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
}
.after\:border-gray-300 {
  &::after {
    content: var(--tw-content);
    border-color: var(--color-gray-300);
  }
}
.after\:bg-white {
  &::after {
    content: var(--tw-content);
    background-color: var(--color-white);
  }
}
.after\:transition-all {
  &::after {
    content: var(--tw-content);
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
}
.after\:content-\[\'\'\] {
  &::after {
    content: var(--tw-content);
    --tw-content: '';
    content: var(--tw-content);
  }
}
.peer-checked\:after\:translate-x-full {
  &:is(:where(.peer):checked ~ *) {
    &::after {
      content: var(--tw-content);
      --tw-translate-x: 100%;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
}
.peer-checked\:after\:border-white {
  &:is(:where(.peer):checked ~ *) {
    &::after {
      content: var(--tw-content);
      border-color: var(--color-white);
    }
  }
}
.even\:bg-gray-100 {
  &:nth-child(even) {
    background-color: var(--color-gray-100);
  }
}
.even\:bg-white\/40 {
  &:nth-child(even) {
    background-color: color-mix(in oklab, var(--color-white) 40%, transparent);
  }
}
.focus-within\:ring-2 {
  &:focus-within {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.focus-within\:ring-indigo-500 {
  &:focus-within {
    --tw-ring-color: var(--color-indigo-500);
  }
}
.focus-within\:ring-indigo-600 {
  &:focus-within {
    --tw-ring-color: var(--color-indigo-600);
  }
}
.focus-within\:ring-offset-2 {
  &:focus-within {
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }
}
.focus-within\:outline-none {
  &:focus-within {
    --tw-outline-style: none;
    outline-style: none;
  }
}
.hover\:-translate-y-0\.5 {
  &:hover {
    @media (hover: hover) {
      --tw-translate-y: calc(var(--spacing) * -0.5);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
}
.hover\:scale-101 {
  &:hover {
    @media (hover: hover) {
      --tw-scale-x: 101%;
      --tw-scale-y: 101%;
      --tw-scale-z: 101%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
}
.hover\:scale-102 {
  &:hover {
    @media (hover: hover) {
      --tw-scale-x: 102%;
      --tw-scale-y: 102%;
      --tw-scale-z: 102%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
}
.hover\:scale-105 {
  &:hover {
    @media (hover: hover) {
      --tw-scale-x: 105%;
      --tw-scale-y: 105%;
      --tw-scale-z: 105%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
}
.hover\:scale-110 {
  &:hover {
    @media (hover: hover) {
      --tw-scale-x: 110%;
      --tw-scale-y: 110%;
      --tw-scale-z: 110%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
}
.hover\:scale-\[1\.02\] {
  &:hover {
    @media (hover: hover) {
      scale: 1.02;
    }
  }
}
.hover\:border-gray-300 {
  &:hover {
    @media (hover: hover) {
      border-color: var(--color-gray-300);
    }
  }
}
.hover\:bg-amber-200 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-amber-200);
    }
  }
}
.hover\:bg-blue-200 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-blue-200);
    }
  }
}
.hover\:bg-blue-200\/70 {
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in oklab, var(--color-blue-200) 70%, transparent);
    }
  }
}
.hover\:bg-blue-400 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-blue-400);
    }
  }
}
.hover\:bg-blue-600 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-blue-600);
    }
  }
}
.hover\:bg-blue-700 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-blue-700);
    }
  }
}
.hover\:bg-cyan-700 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-cyan-700);
    }
  }
}
.hover\:bg-emerald-200 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-emerald-200);
    }
  }
}
.hover\:bg-emerald-300 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-emerald-300);
    }
  }
}
.hover\:bg-emerald-700 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-emerald-700);
    }
  }
}
.hover\:bg-gray-50 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-gray-50);
    }
  }
}
.hover\:bg-gray-50\/50 {
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in oklab, var(--color-gray-50) 50%, transparent);
    }
  }
}
.hover\:bg-gray-50\/80 {
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in oklab, var(--color-gray-50) 80%, transparent);
    }
  }
}
.hover\:bg-gray-100 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-gray-100);
    }
  }
}
.hover\:bg-gray-100\/50 {
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in oklab, var(--color-gray-100) 50%, transparent);
    }
  }
}
.hover\:bg-gray-200 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-gray-200);
    }
  }
}
.hover\:bg-gray-300 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-gray-300);
    }
  }
}
.hover\:bg-gray-400 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-gray-400);
    }
  }
}
.hover\:bg-gray-500 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-gray-500);
    }
  }
}
.hover\:bg-gray-600 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-gray-600);
    }
  }
}
.hover\:bg-gray-600\/50 {
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in oklab, var(--color-gray-600) 50%, transparent);
    }
  }
}
.hover\:bg-gray-800 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-gray-800);
    }
  }
}
.hover\:bg-gray-800\/80 {
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in oklab, var(--color-gray-800) 80%, transparent);
    }
  }
}
.hover\:bg-gray-900 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-gray-900);
    }
  }
}
.hover\:bg-green-100 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-green-100);
    }
  }
}
.hover\:bg-green-600 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-green-600);
    }
  }
}
.hover\:bg-green-700 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-green-700);
    }
  }
}
.hover\:bg-indigo-200 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-indigo-200);
    }
  }
}
.hover\:bg-indigo-500 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-indigo-500);
    }
  }
}
.hover\:bg-indigo-700 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-indigo-700);
    }
  }
}
.hover\:bg-purple-100 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-purple-100);
    }
  }
}
.hover\:bg-purple-500 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-purple-500);
    }
  }
}
.hover\:bg-purple-700 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-purple-700);
    }
  }
}
.hover\:bg-red-50 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-red-50);
    }
  }
}
.hover\:bg-red-50\/80 {
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in oklab, var(--color-red-50) 80%, transparent);
    }
  }
}
.hover\:bg-red-400 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-red-400);
    }
  }
}
.hover\:bg-red-500 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-red-500);
    }
  }
}
.hover\:bg-red-600 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-red-600);
    }
  }
}
.hover\:bg-red-700 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-red-700);
    }
  }
}
.hover\:bg-sky-600 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-sky-600);
    }
  }
}
.hover\:bg-sky-700 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-sky-700);
    }
  }
}
.hover\:bg-sky-800 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-sky-800);
    }
  }
}
.hover\:bg-violet-100 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-violet-100);
    }
  }
}
.hover\:bg-violet-700 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-violet-700);
    }
  }
}
.hover\:bg-white\/20 {
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }
}
.hover\:bg-white\/30 {
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in oklab, var(--color-white) 30%, transparent);
    }
  }
}
.hover\:bg-yellow-100 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-yellow-100);
    }
  }
}
.hover\:bg-yellow-600 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-yellow-600);
    }
  }
}
.hover\:bg-yellow-700 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-yellow-700);
    }
  }
}
.hover\:from-blue-600 {
  &:hover {
    @media (hover: hover) {
      --tw-gradient-from: var(--color-blue-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
}
.hover\:from-green-600 {
  &:hover {
    @media (hover: hover) {
      --tw-gradient-from: var(--color-green-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
}
.hover\:from-indigo-700 {
  &:hover {
    @media (hover: hover) {
      --tw-gradient-from: var(--color-indigo-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
}
.hover\:from-red-600 {
  &:hover {
    @media (hover: hover) {
      --tw-gradient-from: var(--color-red-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
}
.hover\:from-violet-700 {
  &:hover {
    @media (hover: hover) {
      --tw-gradient-from: var(--color-violet-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
}
.hover\:from-yellow-600 {
  &:hover {
    @media (hover: hover) {
      --tw-gradient-from: var(--color-yellow-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
}
.hover\:to-blue-700 {
  &:hover {
    @media (hover: hover) {
      --tw-gradient-to: var(--color-blue-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
}
.hover\:to-green-700 {
  &:hover {
    @media (hover: hover) {
      --tw-gradient-to: var(--color-green-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
}
.hover\:to-indigo-700 {
  &:hover {
    @media (hover: hover) {
      --tw-gradient-to: var(--color-indigo-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
}
.hover\:to-purple-700 {
  &:hover {
    @media (hover: hover) {
      --tw-gradient-to: var(--color-purple-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
}
.hover\:to-red-700 {
  &:hover {
    @media (hover: hover) {
      --tw-gradient-to: var(--color-red-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
}
.hover\:to-yellow-700 {
  &:hover {
    @media (hover: hover) {
      --tw-gradient-to: var(--color-yellow-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
}
.hover\:text-black {
  &:hover {
    @media (hover: hover) {
      color: var(--color-black);
    }
  }
}
.hover\:text-blue-600 {
  &:hover {
    @media (hover: hover) {
      color: var(--color-blue-600);
    }
  }
}
.hover\:text-blue-800 {
  &:hover {
    @media (hover: hover) {
      color: var(--color-blue-800);
    }
  }
}
.hover\:text-gray-500 {
  &:hover {
    @media (hover: hover) {
      color: var(--color-gray-500);
    }
  }
}
.hover\:text-gray-600 {
  &:hover {
    @media (hover: hover) {
      color: var(--color-gray-600);
    }
  }
}
.hover\:text-gray-700 {
  &:hover {
    @media (hover: hover) {
      color: var(--color-gray-700);
    }
  }
}
.hover\:text-gray-800 {
  &:hover {
    @media (hover: hover) {
      color: var(--color-gray-800);
    }
  }
}
.hover\:text-green-900 {
  &:hover {
    @media (hover: hover) {
      color: var(--color-green-900);
    }
  }
}
.hover\:text-indigo-500 {
  &:hover {
    @media (hover: hover) {
      color: var(--color-indigo-500);
    }
  }
}
.hover\:text-indigo-600 {
  &:hover {
    @media (hover: hover) {
      color: var(--color-indigo-600);
    }
  }
}
.hover\:text-indigo-800 {
  &:hover {
    @media (hover: hover) {
      color: var(--color-indigo-800);
    }
  }
}
.hover\:text-red-500 {
  &:hover {
    @media (hover: hover) {
      color: var(--color-red-500);
    }
  }
}
.hover\:text-red-700 {
  &:hover {
    @media (hover: hover) {
      color: var(--color-red-700);
    }
  }
}
.hover\:text-red-800 {
  &:hover {
    @media (hover: hover) {
      color: var(--color-red-800);
    }
  }
}
.hover\:text-red-900 {
  &:hover {
    @media (hover: hover) {
      color: var(--color-red-900);
    }
  }
}
.hover\:text-white {
  &:hover {
    @media (hover: hover) {
      color: var(--color-white);
    }
  }
}
.hover\:underline {
  &:hover {
    @media (hover: hover) {
      text-decoration-line: underline;
    }
  }
}
.hover\:opacity-80 {
  &:hover {
    @media (hover: hover) {
      opacity: 80%;
    }
  }
}
.hover\:shadow-lg {
  &:hover {
    @media (hover: hover) {
      --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
}
.hover\:shadow-md {
  &:hover {
    @media (hover: hover) {
      --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
}
.hover\:shadow-xl {
  &:hover {
    @media (hover: hover) {
      --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
}
.focus\:z-10 {
  &:focus {
    z-index: 10;
  }
}
.focus\:border-black {
  &:focus {
    border-color: var(--color-black);
  }
}
.focus\:border-blue-500 {
  &:focus {
    border-color: var(--color-blue-500);
  }
}
.focus\:border-gray-300 {
  &:focus {
    border-color: var(--color-gray-300);
  }
}
.focus\:border-gray-500 {
  &:focus {
    border-color: var(--color-gray-500);
  }
}
.focus\:border-indigo-300 {
  &:focus {
    border-color: var(--color-indigo-300);
  }
}
.focus\:border-indigo-500 {
  &:focus {
    border-color: var(--color-indigo-500);
  }
}
.focus\:border-transparent {
  &:focus {
    border-color: transparent;
  }
}
.focus\:bg-gray-100 {
  &:focus {
    background-color: var(--color-gray-100);
  }
}
.focus\:bg-gray-200 {
  &:focus {
    background-color: var(--color-gray-200);
  }
}
.focus\:bg-white {
  &:focus {
    background-color: var(--color-white);
  }
}
.focus\:text-gray-600 {
  &:focus {
    color: var(--color-gray-600);
  }
}
.focus\:ring {
  &:focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.focus\:ring-0 {
  &:focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.focus\:ring-1 {
  &:focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.focus\:ring-2 {
  &:focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.focus\:ring-black {
  &:focus {
    --tw-ring-color: var(--color-black);
  }
}
.focus\:ring-blue-300 {
  &:focus {
    --tw-ring-color: var(--color-blue-300);
  }
}
.focus\:ring-blue-400 {
  &:focus {
    --tw-ring-color: var(--color-blue-400);
  }
}
.focus\:ring-blue-500 {
  &:focus {
    --tw-ring-color: var(--color-blue-500);
  }
}
.focus\:ring-gray-500 {
  &:focus {
    --tw-ring-color: var(--color-gray-500);
  }
}
.focus\:ring-green-500 {
  &:focus {
    --tw-ring-color: var(--color-green-500);
  }
}
.focus\:ring-indigo-200 {
  &:focus {
    --tw-ring-color: var(--color-indigo-200);
  }
}
.focus\:ring-indigo-500 {
  &:focus {
    --tw-ring-color: var(--color-indigo-500);
  }
}
.focus\:ring-indigo-600 {
  &:focus {
    --tw-ring-color: var(--color-indigo-600);
  }
}
.focus\:ring-red-400 {
  &:focus {
    --tw-ring-color: var(--color-red-400);
  }
}
.focus\:ring-red-500 {
  &:focus {
    --tw-ring-color: var(--color-red-500);
  }
}
.focus\:ring-violet-500 {
  &:focus {
    --tw-ring-color: var(--color-violet-500);
  }
}
.focus\:ring-white\/30 {
  &:focus {
    --tw-ring-color: color-mix(in oklab, var(--color-white) 30%, transparent);
  }
}
.focus\:ring-yellow-500 {
  &:focus {
    --tw-ring-color: var(--color-yellow-500);
  }
}
.focus\:ring-offset-0 {
  &:focus {
    --tw-ring-offset-width: 0px;
    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }
}
.focus\:ring-offset-2 {
  &:focus {
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }
}
.focus\:outline-hidden {
  &:focus {
    outline-style: none;
    @media (forced-colors: active) {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
}
.focus\:outline-none {
  &:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
}
.focus\:ring-inset {
  &:focus {
    --tw-ring-inset: inset;
  }
}
.focus-visible\:outline {
  &:focus-visible {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
}
.focus-visible\:outline-2 {
  &:focus-visible {
    outline-style: var(--tw-outline-style);
    outline-width: 2px;
  }
}
.focus-visible\:outline-offset-2 {
  &:focus-visible {
    outline-offset: 2px;
  }
}
.focus-visible\:outline-indigo-600 {
  &:focus-visible {
    outline-color: var(--color-indigo-600);
  }
}
.active\:translate-y-0 {
  &:active {
    --tw-translate-y: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
}
.disabled\:pointer-events-none {
  &:disabled {
    pointer-events: none;
  }
}
.disabled\:cursor-not-allowed {
  &:disabled {
    cursor: not-allowed;
  }
}
.disabled\:opacity-50 {
  &:disabled {
    opacity: 50%;
  }
}
.motion-safe\:animate-bounce {
  @media (prefers-reduced-motion: no-preference) {
    animation: var(--animate-bounce);
  }
}
.sm\:ml-6 {
  @media (width >= 40rem) {
    margin-left: calc(var(--spacing) * 6);
  }
}
.sm\:flex {
  @media (width >= 40rem) {
    display: flex;
  }
}
.sm\:space-x-8 {
  @media (width >= 40rem) {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 8) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
}
.sm\:rounded-lg {
  @media (width >= 40rem) {
    border-radius: var(--radius-lg);
  }
}
.sm\:px-6 {
  @media (width >= 40rem) {
    padding-inline: calc(var(--spacing) * 6);
  }
}
.sm\:text-sm {
  @media (width >= 40rem) {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
}
.sm\:leading-6 {
  @media (width >= 40rem) {
    --tw-leading: calc(var(--spacing) * 6);
    line-height: calc(var(--spacing) * 6);
  }
}
.md\:flex {
  @media (width >= 48rem) {
    display: flex;
  }
}
.md\:hidden {
  @media (width >= 48rem) {
    display: none;
  }
}
.md\:inline {
  @media (width >= 48rem) {
    display: inline;
  }
}
.md\:w-1\/2 {
  @media (width >= 48rem) {
    width: calc(1/2 * 100%);
  }
}
.md\:max-w-4xl {
  @media (width >= 48rem) {
    max-width: var(--container-4xl);
  }
}
.md\:grid-cols-2 {
  @media (width >= 48rem) {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}
.md\:grid-cols-3 {
  @media (width >= 48rem) {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}
.md\:flex-row {
  @media (width >= 48rem) {
    flex-direction: row;
  }
}
.md\:flex-nowrap {
  @media (width >= 48rem) {
    flex-wrap: nowrap;
  }
}
.md\:items-center {
  @media (width >= 48rem) {
    align-items: center;
  }
}
.md\:justify-between {
  @media (width >= 48rem) {
    justify-content: space-between;
  }
}
.lg\:col-span-2 {
  @media (width >= 64rem) {
    grid-column: span 2 / span 2;
  }
}
.lg\:h-full {
  @media (width >= 64rem) {
    height: 100%;
  }
}
.lg\:w-full {
  @media (width >= 64rem) {
    width: 100%;
  }
}
.lg\:grid-cols-3 {
  @media (width >= 64rem) {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}
.lg\:px-8 {
  @media (width >= 64rem) {
    padding-inline: calc(var(--spacing) * 8);
  }
}
.rtl\:\!mr-0 {
  &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
    margin-right: calc(var(--spacing) * 0) !important;
  }
}
.dark\:border {
  @media (prefers-color-scheme: dark) {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
}
.dark\:\!border-neutral-700 {
  @media (prefers-color-scheme: dark) {
    border-color: var(--color-neutral-700) !important;
  }
}
.dark\:border-blue-600 {
  @media (prefers-color-scheme: dark) {
    border-color: var(--color-blue-600);
  }
}
.dark\:border-gray-600 {
  @media (prefers-color-scheme: dark) {
    border-color: var(--color-gray-600);
  }
}
.dark\:border-gray-700 {
  @media (prefers-color-scheme: dark) {
    border-color: var(--color-gray-700);
  }
}
.dark\:border-gray-700\/50 {
  @media (prefers-color-scheme: dark) {
    border-color: color-mix(in oklab, var(--color-gray-700) 50%, transparent);
  }
}
.dark\:border-neutral-600 {
  @media (prefers-color-scheme: dark) {
    border-color: var(--color-neutral-600);
  }
}
.dark\:border-neutral-700 {
  @media (prefers-color-scheme: dark) {
    border-color: var(--color-neutral-700);
  }
}
.dark\:border-purple-500 {
  @media (prefers-color-scheme: dark) {
    border-color: var(--color-purple-500);
  }
}
.dark\:\!bg-neutral-800 {
  @media (prefers-color-scheme: dark) {
    background-color: var(--color-neutral-800) !important;
  }
}
.dark\:bg-blue-500 {
  @media (prefers-color-scheme: dark) {
    background-color: var(--color-blue-500);
  }
}
.dark\:bg-gray-700\/50 {
  @media (prefers-color-scheme: dark) {
    background-color: color-mix(in oklab, var(--color-gray-700) 50%, transparent);
  }
}
.dark\:bg-gray-800 {
  @media (prefers-color-scheme: dark) {
    background-color: var(--color-gray-800);
  }
}
.dark\:bg-gray-800\/50 {
  @media (prefers-color-scheme: dark) {
    background-color: color-mix(in oklab, var(--color-gray-800) 50%, transparent);
  }
}
.dark\:bg-gray-800\/80 {
  @media (prefers-color-scheme: dark) {
    background-color: color-mix(in oklab, var(--color-gray-800) 80%, transparent);
  }
}
.dark\:bg-indigo-800\/50 {
  @media (prefers-color-scheme: dark) {
    background-color: color-mix(in oklab, var(--color-indigo-800) 50%, transparent);
  }
}
.dark\:bg-indigo-900 {
  @media (prefers-color-scheme: dark) {
    background-color: var(--color-indigo-900);
  }
}
.dark\:bg-neutral-700 {
  @media (prefers-color-scheme: dark) {
    background-color: var(--color-neutral-700);
  }
}
.dark\:bg-neutral-800 {
  @media (prefers-color-scheme: dark) {
    background-color: var(--color-neutral-800);
  }
}
.dark\:bg-neutral-900 {
  @media (prefers-color-scheme: dark) {
    background-color: var(--color-neutral-900);
  }
}
.dark\:bg-neutral-900\/80 {
  @media (prefers-color-scheme: dark) {
    background-color: color-mix(in oklab, var(--color-neutral-900) 80%, transparent);
  }
}
.dark\:bg-purple-800\/50 {
  @media (prefers-color-scheme: dark) {
    background-color: color-mix(in oklab, var(--color-purple-800) 50%, transparent);
  }
}
.dark\:from-gray-800 {
  @media (prefers-color-scheme: dark) {
    --tw-gradient-from: var(--color-gray-800);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
}
.dark\:from-gray-900 {
  @media (prefers-color-scheme: dark) {
    --tw-gradient-from: var(--color-gray-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
}
.dark\:to-gray-700 {
  @media (prefers-color-scheme: dark) {
    --tw-gradient-to: var(--color-gray-700);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
}
.dark\:to-gray-800 {
  @media (prefers-color-scheme: dark) {
    --tw-gradient-to: var(--color-gray-800);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
}
.dark\:fill-neutral-200 {
  @media (prefers-color-scheme: dark) {
    fill: var(--color-neutral-200);
  }
}
.dark\:text-blue-500 {
  @media (prefers-color-scheme: dark) {
    color: var(--color-blue-500);
  }
}
.dark\:text-gray-200 {
  @media (prefers-color-scheme: dark) {
    color: var(--color-gray-200);
  }
}
.dark\:text-gray-300 {
  @media (prefers-color-scheme: dark) {
    color: var(--color-gray-300);
  }
}
.dark\:text-gray-400 {
  @media (prefers-color-scheme: dark) {
    color: var(--color-gray-400);
  }
}
.dark\:text-indigo-300 {
  @media (prefers-color-scheme: dark) {
    color: var(--color-indigo-300);
  }
}
.dark\:text-neutral-200 {
  @media (prefers-color-scheme: dark) {
    color: var(--color-neutral-200);
  }
}
.dark\:text-neutral-400 {
  @media (prefers-color-scheme: dark) {
    color: var(--color-neutral-400);
  }
}
.dark\:text-neutral-500 {
  @media (prefers-color-scheme: dark) {
    color: var(--color-neutral-500);
  }
}
.dark\:text-purple-300 {
  @media (prefers-color-scheme: dark) {
    color: var(--color-purple-300);
  }
}
.dark\:text-purple-400 {
  @media (prefers-color-scheme: dark) {
    color: var(--color-purple-400);
  }
}
.dark\:text-purple-500 {
  @media (prefers-color-scheme: dark) {
    color: var(--color-purple-500);
  }
}
.dark\:text-white {
  @media (prefers-color-scheme: dark) {
    color: var(--color-white);
  }
}
.dark\:opacity-40 {
  @media (prefers-color-scheme: dark) {
    opacity: 40%;
  }
}
.dark\:ring-gray-900 {
  @media (prefers-color-scheme: dark) {
    --tw-ring-color: var(--color-gray-900);
  }
}
.dark\:peer-focus\:ring-blue-800 {
  @media (prefers-color-scheme: dark) {
    &:is(:where(.peer):focus ~ *) {
      --tw-ring-color: var(--color-blue-800);
    }
  }
}
.dark\:hover\:bg-gray-600\/50 {
  @media (prefers-color-scheme: dark) {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in oklab, var(--color-gray-600) 50%, transparent);
      }
    }
  }
}
.dark\:hover\:bg-gray-700 {
  @media (prefers-color-scheme: dark) {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-700);
      }
    }
  }
}
.dark\:hover\:bg-gray-700\/50 {
  @media (prefers-color-scheme: dark) {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in oklab, var(--color-gray-700) 50%, transparent);
      }
    }
  }
}
.dark\:hover\:bg-neutral-800 {
  @media (prefers-color-scheme: dark) {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-800);
      }
    }
  }
}
.dark\:hover\:text-neutral-200 {
  @media (prefers-color-scheme: dark) {
    &:hover {
      @media (hover: hover) {
        color: var(--color-neutral-200);
      }
    }
  }
}
.dark\:hover\:text-neutral-300 {
  @media (prefers-color-scheme: dark) {
    &:hover {
      @media (hover: hover) {
        color: var(--color-neutral-300);
      }
    }
  }
}
.dark\:focus\:border-purple-500 {
  @media (prefers-color-scheme: dark) {
    &:focus {
      border-color: var(--color-purple-500);
    }
  }
}
.dark\:focus\:bg-neutral-800 {
  @media (prefers-color-scheme: dark) {
    &:focus {
      background-color: var(--color-neutral-800);
    }
  }
}
.dark\:focus\:text-neutral-300 {
  @media (prefers-color-scheme: dark) {
    &:focus {
      color: var(--color-neutral-300);
    }
  }
}
.\[\&\:\:-webkit-scrollbar\]\:w-2 {
  &::-webkit-scrollbar {
    width: calc(var(--spacing) * 2);
  }
}
.\[\&\:\:-webkit-scrollbar-thumb\]\:rounded-full {
  &::-webkit-scrollbar-thumb {
    border-radius: calc(infinity * 1px);
  }
}
.\[\&\:\:-webkit-scrollbar-thumb\]\:bg-gray-300 {
  &::-webkit-scrollbar-thumb {
    background-color: var(--color-gray-300);
  }
}
.dark\:\[\&\:\:-webkit-scrollbar-thumb\]\:bg-neutral-500 {
  @media (prefers-color-scheme: dark) {
    &::-webkit-scrollbar-thumb {
      background-color: var(--color-neutral-500);
    }
  }
}
.\[\&\:\:-webkit-scrollbar-track\]\:bg-gray-100 {
  &::-webkit-scrollbar-track {
    background-color: var(--color-gray-100);
  }
}
.dark\:\[\&\:\:-webkit-scrollbar-track\]\:bg-neutral-700 {
  @media (prefers-color-scheme: dark) {
    &::-webkit-scrollbar-track {
      background-color: var(--color-neutral-700);
    }
  }
}
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-50: oklch(0.971 0.013 17.38);
    --color-red-100: oklch(0.936 0.032 17.717);
    --color-red-400: oklch(0.704 0.191 22.216);
    --color-red-500: oklch(0.637 0.237 25.331);
    --color-red-600: oklch(0.577 0.245 27.325);
    --color-red-700: oklch(0.505 0.213 27.518);
    --color-red-800: oklch(0.444 0.177 26.899);
    --color-red-900: oklch(0.396 0.141 25.723);
    --color-orange-400: oklch(0.75 0.183 55.934);
    --color-orange-500: oklch(0.705 0.213 47.604);
    --color-amber-50: oklch(0.987 0.022 95.277);
    --color-amber-100: oklch(0.962 0.059 95.617);
    --color-amber-200: oklch(0.924 0.12 95.746);
    --color-amber-500: oklch(0.769 0.188 70.08);
    --color-amber-600: oklch(0.666 0.179 58.318);
    --color-yellow-50: oklch(0.987 0.026 102.212);
    --color-yellow-100: oklch(0.973 0.071 103.193);
    --color-yellow-300: oklch(0.905 0.182 98.111);
    --color-yellow-500: oklch(0.795 0.184 86.047);
    --color-yellow-600: oklch(0.681 0.162 75.834);
    --color-yellow-700: oklch(0.554 0.135 66.442);
    --color-yellow-800: oklch(0.476 0.114 61.907);
    --color-green-50: oklch(0.982 0.018 155.826);
    --color-green-100: oklch(0.962 0.044 156.743);
    --color-green-500: oklch(0.723 0.219 149.579);
    --color-green-600: oklch(0.627 0.194 149.214);
    --color-green-700: oklch(0.527 0.154 150.069);
    --color-green-800: oklch(0.448 0.119 151.328);
    --color-green-900: oklch(0.393 0.095 152.535);
    --color-emerald-50: oklch(0.979 0.021 166.113);
    --color-emerald-100: oklch(0.95 0.052 163.051);
    --color-emerald-200: oklch(0.905 0.093 164.15);
    --color-emerald-300: oklch(0.845 0.143 164.978);
    --color-emerald-400: oklch(0.765 0.177 163.223);
    --color-emerald-500: oklch(0.696 0.17 162.48);
    --color-emerald-600: oklch(0.596 0.145 163.225);
    --color-emerald-700: oklch(0.508 0.118 165.612);
    --color-cyan-400: oklch(0.789 0.154 211.53);
    --color-cyan-500: oklch(0.715 0.143 215.221);
    --color-cyan-600: oklch(0.609 0.126 221.723);
    --color-cyan-700: oklch(0.52 0.105 223.128);
    --color-sky-100: oklch(0.951 0.026 236.824);
    --color-sky-500: oklch(0.685 0.169 237.323);
    --color-sky-600: oklch(0.588 0.158 241.966);
    --color-sky-700: oklch(0.5 0.134 242.749);
    --color-sky-800: oklch(0.443 0.11 240.79);
    --color-blue-50: oklch(0.97 0.014 254.604);
    --color-blue-100: oklch(0.932 0.032 255.585);
    --color-blue-200: oklch(0.882 0.059 254.128);
    --color-blue-300: oklch(0.809 0.105 251.813);
    --color-blue-400: oklch(0.707 0.165 254.624);
    --color-blue-500: oklch(0.623 0.214 259.815);
    --color-blue-600: oklch(0.546 0.245 262.881);
    --color-blue-700: oklch(0.488 0.243 264.376);
    --color-blue-800: oklch(0.424 0.199 265.638);
    --color-indigo-50: oklch(0.962 0.018 272.314);
    --color-indigo-100: oklch(0.93 0.034 272.788);
    --color-indigo-200: oklch(0.87 0.065 274.039);
    --color-indigo-300: oklch(0.785 0.115 274.713);
    --color-indigo-400: oklch(0.673 0.182 276.935);
    --color-indigo-500: oklch(0.585 0.233 277.117);
    --color-indigo-600: oklch(0.511 0.262 276.966);
    --color-indigo-700: oklch(0.457 0.24 277.023);
    --color-indigo-800: oklch(0.398 0.195 277.366);
    --color-indigo-900: oklch(0.359 0.144 278.697);
    --color-violet-50: oklch(0.969 0.016 293.756);
    --color-violet-100: oklch(0.943 0.029 294.588);
    --color-violet-500: oklch(0.606 0.25 292.717);
    --color-violet-600: oklch(0.541 0.281 293.009);
    --color-violet-700: oklch(0.491 0.27 292.581);
    --color-purple-50: oklch(0.977 0.014 308.299);
    --color-purple-100: oklch(0.946 0.033 307.174);
    --color-purple-300: oklch(0.827 0.119 306.383);
    --color-purple-400: oklch(0.714 0.203 305.504);
    --color-purple-500: oklch(0.627 0.265 303.9);
    --color-purple-600: oklch(0.558 0.288 302.321);
    --color-purple-700: oklch(0.496 0.265 301.924);
    --color-purple-800: oklch(0.438 0.218 303.724);
    --color-pink-500: oklch(0.656 0.241 354.308);
    --color-gray-50: oklch(0.985 0.002 247.839);
    --color-gray-100: oklch(0.967 0.003 264.542);
    --color-gray-200: oklch(0.928 0.006 264.531);
    --color-gray-300: oklch(0.872 0.01 258.338);
    --color-gray-400: oklch(0.707 0.022 261.325);
    --color-gray-500: oklch(0.551 0.027 264.364);
    --color-gray-600: oklch(0.446 0.03 256.802);
    --color-gray-700: oklch(0.373 0.034 259.733);
    --color-gray-800: oklch(0.278 0.033 256.848);
    --color-gray-900: oklch(0.21 0.034 264.665);
    --color-neutral-200: oklch(0.922 0 0);
    --color-neutral-300: oklch(0.87 0 0);
    --color-neutral-400: oklch(0.708 0 0);
    --color-neutral-500: oklch(0.556 0 0);
    --color-neutral-600: oklch(0.439 0 0);
    --color-neutral-700: oklch(0.371 0 0);
    --color-neutral-800: oklch(0.269 0 0);
    --color-neutral-900: oklch(0.205 0 0);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-xs: 20rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --container-lg: 32rem;
    --container-xl: 36rem;
    --container-2xl: 42rem;
    --container-4xl: 56rem;
    --container-5xl: 64rem;
    --container-7xl: 80rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --font-weight-extrabold: 800;
    --tracking-tight: -0.025em;
    --tracking-wider: 0.05em;
    --leading-relaxed: 1.625;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --drop-shadow-lg: 0 4px 4px rgb(0 0 0 / 0.15);
    --ease-in: cubic-bezier(0.4, 0, 1, 1);
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --animate-spin: spin 1s linear infinite;
    --animate-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    --animate-bounce: bounce 1s infinite;
    --blur-sm: 8px;
    --blur-md: 12px;
    --blur-2xl: 40px;
    --blur-3xl: 64px;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-font-feature-settings: var(--font-sans--font-feature-settings);
    --default-font-variation-settings: var(
      --font-sans--font-variation-settings
    );
    --default-mono-font-family: var(--font-mono);
    --default-mono-font-feature-settings: var(
      --font-mono--font-feature-settings
    );
    --default-mono-font-variation-settings: var(
      --font-mono--font-variation-settings
    );
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var( --default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji" );
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var( --default-font-variation-settings, normal );
    -webkit-tap-highlight-color: transparent;
  }
  body {
    line-height: inherit;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var( --default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace );
    font-feature-settings: var( --default-mono-font-feature-settings, normal );
    font-variation-settings: var( --default-mono-font-variation-settings, normal );
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
    color: color-mix(in oklab, currentColor 50%, transparent);
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities;
@layer theme;
@layer base;
@layer components;
@layer components {
  optgroup {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    color: var(--color-gray-700);
  }
  .container {
    margin-inline: auto;
    max-width: var(--container-4xl);
    padding: calc(var(--spacing) * 4);
    header, footer {
      padding: calc(var(--spacing) * 2);
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
}
@layer utilities;
@layer utilities {
  .bg-blue-500-50 {
    background-color: color-mix( in oklab, var(--color-blue-500) 50%, transparent );
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
    --tw-gradient-from: var(--color-sky-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    --tw-gradient-to: var(--color-sky-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    border-radius: var(--radius-lg);
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 105%;
        --tw-scale-y: 105%;
        --tw-scale-z: 105%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 300ms;
    transition-duration: 300ms;
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  @property --tw-gradient-from {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
  }
}
:root {
  --bg-color: #fff;
  --text-color: #1e293b;
}
[data-x-show] {
  will-change: opacity, transform;
}
.btn {
  will-change: transform;
}
.btn:hover {
  transform: scale(1.03);
  transition: transform 0.2s ease-in-out;
}
.timeline-cards {
  --col-gap: 0.5rem;
  --row-gap: 0rem;
  --line-w: 0.25rem;
  display: flexbox;
  grid-template-columns: var(--line-w) 1fr;
  grid-auto-columns: max-content;
  column-gap: var(--col-gap);
  list-style: none;
  width: min(50rem, 100%);
  margin-inline: auto;
  padding: 0;
  border-radius: 10px;
}
.timeline-cards::before {
  content: "";
  grid-column: 1;
  grid-row: 1 / span 20;
  border-radius: calc(var(--line-w) / 2);
}
.timeline-cards li:not(:last-child) {
  margin-bottom: calc(var(--row-gap) / 4);
}
.timeline-cards li {
  grid-column: 2;
  --inlineP: 0.75rem;
  margin-inline: calc(var(--inlineP) / 2);
  grid-row: span 2;
  display: grid;
  grid-template-rows: min-content min-content;
}
.timeline-cards li .date {
  --dateH: 1.5rem;
  height: var(--dateH);
  margin-inline: calc(var(--inlineP) * -1);
  text-align: center;
  background-color: var(--accent-color);
  color: white;
  font-size: 0.9 rem;
  white-space: normal;
  display: grid;
  place-content: center;
  position: relative;
  border-radius: calc(var(--dateH) / 2) 0 0 calc(var(--dateH) / 2);
}
.timeline-cards li .date::before {
  content: "";
  width: var(--inlineP);
  aspect-ratio: 1;
  background: var(--accent-color);
  background-image: linear-gradient(rgba(0, 0, 0, 0.2) 100%, transparent);
  position: absolute;
  top: 100%;
  clip-path: polygon(0 0, 100% 0, 0 100%);
  right: 0;
}
.timeline-cards li .date::after {
  content: "";
  position: absolute;
  width: 1.2rem;
  aspect-ratio: 1;
  background: white;
  border: 0.3rem solid var(--accent-color);
  border-radius: 50%;
  top: 50%;
  transform: translate(50%, -50%);
  right: calc(100% + var(--col-gap) + var(--line-w) / 2);
}
.timeline-cards li .title, .timeline-cards li .descr {
  border-radius: 5px;
  padding-inline: 0.75rem;
  position: relative;
}
.timeline-cards li .title {
  overflow: hidden;
  padding-block-start: 0.5rem;
  padding-block-end: 0rem;
  font-weight: 300;
  font-size: 1rem;
}
.timeline-cards li .descr {
  padding-block-end: 0.5rem;
  font-weight: 300;
}
.timeline-cards li .title::before {
  bottom: calc(100% + 0.125rem);
}
.timeline-cards li .descr::before {
  z-index: -1;
  bottom: 0.25rem;
}
@media (min-width: 40rem) {
  .timeline-cards {
    grid-template-columns: 1fr var(--line-w) 1fr;
  }
  .timeline-cards::before {
    grid-column: 2;
  }
  .timeline-cards li:nth-child(odd) {
    grid-column: 1;
  }
  .timeline-cards li:nth-child(even) {
    grid-column: 3;
  }
  .timeline-cards li:nth-child(2) {
    grid-row: 2/4;
  }
  .timeline-cards li:nth-child(odd) .date::before {
    clip-path: polygon(0 0, 100% 0, 100% 100%);
    left: 0;
  }
  .timeline-cards li:nth-child(odd) .date::after {
    transform: translate(-50%, -50%);
    left: calc(100% + var(--col-gap) + var(--line-w) / 2);
  }
  .timeline-cards li:nth-child(odd) .date {
    border-radius: 0 calc(var(--dateH) / 2) calc(var(--dateH) / 2) 0;
  }
}
.timeline-cards li.completed {
  --accent-color: #4cad73;
}
.timeline-cards li.current {
  --accent-color: #1b5f8c;
}
.timeline-cards li.future {
  --accent-color: #41516c;
}
.timeline-cards li.overdue {
  --accent-color: #e24a68;
}
.pika-single {
  background: white;
  border-radius: 8px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
  border: none;
  font-family: "Poppins", sans-serif;
}
.pika-label {
  font-weight: bold;
  color: #3b82f6;
}
.pika-prev, .pika-next {
  color: #3b82f6;
  font-size: 1.5rem;
}
.pika-table th {
  font-size: 14px;
  color: #1e293b;
}
.pika-day {
  padding: 10px;
  font-size: 14px;
  border-radius: 6px;
  transition: all 0.2s ease-in-out;
}
.pika-day:hover {
  background: #e0f2fe;
  color: #0ea5e9;
}
.pika-day.is-selected {
  background: #3b82f6;
  color: white;
  font-weight: bold;
}
.pika-day.is-today {
  border: 2px solid #3b82f6;
  font-weight: bold;
}
.pika-day.is-disabled {
  color: #9ca3af;
  cursor: not-allowed;
  text-decoration: line-through;
}
.pika-single {
  animation: fadeIn 0.2s ease-in-out;
}
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}
.result-card {
  border-bottom: none !important;
}
.result-card * {
  border-bottom: none !important;
}
.alert {
  background: linear-gradient(to right, #ff7e5f, #feb47b);
  border-radius: 8px;
  padding: 12px 16px;
  font-weight: 600;
  color: white;
  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
  display: flex;
  align-items: center;
  gap: 10px;
  transition: all 0.3s ease-in-out;
}
.alert::before {
  content: "⚠️";
  font-size: 1.2rem;
}
.alert .close-btn {
  margin-left: auto;
  background: transparent;
  border: none;
  color: white;
  font-size: 1rem;
  cursor: pointer;
  transition: opacity 0.2s;
}
.alert .close-btn:hover {
  opacity: 0.7;
}
select {
  color: black;
  padding: 0.5rem;
  border-radius: 6px;
  font-size: 14px;
}
option {
  background-color: white;
  color: black;
}
optgroup {
  font-weight: bold;
  color: #374151;
  background-color: white;
}
@supports (-webkit-appearance: none) and (stroke-color: transparent) {
  select::-ms-expand {
    display: none;
  }
}
#successAlert {
  transition: opacity 0.5s ease-out, transform 0.3s ease-in-out;
}
#successAlert.show {
  opacity: 1;
  transform: scale(1);
}
#successAlert.hide {
  opacity: 0;
  transform: scale(0.95);
  pointer-events: none;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-pan-x {
  syntax: "*";
  inherits: false;
}
@property --tw-pan-y {
  syntax: "*";
  inherits: false;
}
@property --tw-pinch-zoom {
  syntax: "*";
  inherits: false;
}
@property --tw-scroll-snap-strictness {
  syntax: "*";
  inherits: false;
  initial-value: proximity;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-divide-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-ordinal {
  syntax: "*";
  inherits: false;
}
@property --tw-slashed-zero {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-figure {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-spacing {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-fraction {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-contain-size {
  syntax: "*";
  inherits: false;
}
@property --tw-contain-layout {
  syntax: "*";
  inherits: false;
}
@property --tw-contain-paint {
  syntax: "*";
  inherits: false;
}
@property --tw-contain-style {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}
@keyframes bounce {
  0%, 100% {
    transform: translateY(-25%);
    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
  }
  50% {
    transform: none;
    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
  }
}
